{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.object.values.js","webpack:///./node_modules/zrender/lib/svg/core.js","webpack:///./node_modules/zrender/lib/core/arrayDiff.js","webpack:///./node_modules/zrender/lib/svg/graphic.js","webpack:///./node_modules/zrender/lib/svg/helper/Definable.js","webpack:///./node_modules/zrender/lib/svg/helper/GradientManager.js","webpack:///./node_modules/zrender/lib/svg/helper/PatternManager.js","webpack:///./node_modules/zrender/lib/svg/helper/ClippathManager.js","webpack:///./node_modules/zrender/lib/svg/helper/ShadowManager.js","webpack:///./node_modules/zrender/lib/svg/Painter.js","webpack:///./node_modules/echarts/lib/renderer/installSVGRenderer.js"],"names":["$","$values","values","target","stat","O","createElement","name","document","createElementNS","oldArr","newArr","equals","a","b","slice","newLen","length","oldLen","editLength","maxEditLength","bestPath","newPos","components","oldPos","extractCommon","indices","i","push","count","added","removed","execEditLength","diagonalPath","basePath","addPath","removePath","undefined","canAdd","canRemove","clonePath","pushComponent","buildValues","ret","commonCount","last","componentPos","componentLen","component","path","arrayDiff","equal","NONE","mathRound","Math","round","mathSin","sin","mathCos","cos","PI","PI2","degree","EPSILON","round3","val","round4","isAroundZero","pathHasFill","style","fill","pathHasStroke","stroke","setTransform","svgEl","m","attr","el","key","type","setAttribute","attrXLink","setAttributeNS","attrXML","bindStyle","opacity","fillOpacity","strokeWidth","lineWidth","strokeScale_1","strokeNoScale","getLineScale","strokeFirst","strokeOpacity","lineDash","lineDashOffset","rawVal","join","lineCap","lineJoin","miterLimit","SVGPathRebuilder","prototype","reset","this","_d","_str","moveTo","x","y","_add","lineTo","bezierCurveTo","x2","y2","x3","y3","quadraticCurveTo","arc","cx","cy","r","startAngle","endAngle","anticlockwise","ellipse","rx","ry","psi","firstCmd","dTheta","clockwise","dThetaPositive","abs","isCircle","unifiedTheta","large","x0","y0","isNaN","rect","w","h","closePath","cmd","c","d","e","f","g","arguments","_invalid","generateStr","getStr","svgPath","brush","__svgEl","createPathProxy","shapeChanged","beginPath","buildPath","shape","pathUpdated","pathVersion","getVersion","elExt","svgPathBuilder","__svgPathBuilder","__svgPathVersion","strokePercent","rebuildPath","transform","svgImage","image","HTMLImageElement","src","HTMLCanvasElement","toDataURL","dw","width","dh","height","__imageSrc","TEXT_ALIGN_TO_ANCHOR","left","right","center","middle","adjustTextY","lineHeight","textBaseline","svgText","text","textSvgEl","font","textSvgElStyle","textContent","textAlign","MARK_UNUSED","MARK_USED","Definable","zrId","svgRoot","tagNames","markLabel","domName","nextId","_domName","_zrId","_svgRoot","_tagNames","_markLabel","getDefs","isForceCreating","defs","getElementsByTagName","defs_1","insertBefore","firstChild","contains","children","doUpdate","onUpdate","dom","add","addDom","parentNode","appendChild","removeDom","removeChild","getDoms","doms","tagName","tags","markAllUnused","that","markDomUsed","markDomUnused","isDomUnused","removeUnused","_this","getSvgProxy","displayable","Path","TSpan","getSvgElement","isLinearGradient","value","isRadialGradient","isGradient","_super","GradientManager","call","addWithoutUpdate","svgElement","that_1","fillOrStroke","gradient","__dom","markUsed","id","getAttribute","updateDom","update","global","innerHTML","colors","colorStops","len","stop_1","offset","color","indexOf","hex","isPattern","patternDomMap","WeakMap","PatternManager","pattern","get","patternDom","SVGElement","svgWidth","svgHeight","img","prevImage","imageSrc","hostEl","dirty","createdImage","rotation","scaleX","scaleY","set","generateClipPathsKey","clipPaths","clipPath","hasClipPath","__clipPaths","ClippathManager","_refGroups","_keyDuplicateCount","_getClipPathGroup","prevDisplayable","keyDuplicateCount","clipPathKey","clipGroup","parentEl","clipPathEl","_dom","svgProxy","pathEl","newRefGroupsMap","group","ShadowManager","_shadowDomMap","_shadowDomPool","_getFromPool","shadowDom","pop","domChild","hasShadow","shadowKey","getShadowKey","_shadowDom","remove","filter","globalScale","getGlobalScale","offsetX","shadowOffsetX","offsetY","shadowOffsetY","blur","shadowBlur","shadowColor","stdDx","stdDy","stdDeviation","shadowDomsPool","toFixed","parseInt10","parseInt","checkParentAvailable","parent","child","insertAfter","prevSibling","nextSibling","prepend","removeFromMyParent","SVGPainter","root","storage","opts","refreshHover","createMethodNotSupport","pathToImage","configLayer","_opts","util","svgDom","cssText","bgRoot","_gradientManager","_patternManager","_clipPathManager","_shadowManager","viewport","_svgDom","_backgroundRoot","_viewport","resize","_visibleList","getType","getViewportRoot","getSvgDom","getSvgRoot","getViewportRootOffset","viewportRoot","offsetLeft","offsetTop","refresh","list","getDisplayList","_paintList","setBackgroundColor","backgroundColor","_backgroundNode","bgNode","getWidth","getHeight","createSVGElement","tag","paintOne","gradientManager","patternManager","clipPathManager","shadowManager","visibleList","listLen","newVisibleList","invisible","__dirty","prevSvgElement","topPrevSvgElement","currentClipGroup","diff","item","k","_getDefs","display","_getSize","_width","_height","viewportStyle","whIdx","wh","cwh","plt","prb","parseFloat","stl","defaultView","getComputedStyle","dispose","clear","viewportNode","outerHTML","html","encodeURIComponent","replace","method","install","registers","registerPainter"],"mappings":"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","file":"js/chunk-75cfb2a0.22284f08.js","sourcesContent":["var $ = require('../internals/export');\nvar $values = require('../internals/object-to-array').values;\n\n// `Object.values` method\n// https://tc39.es/ecma262/#sec-object.values\n$({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n","export function createElement(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n","function diff(oldArr, newArr, equals) {\n    if (!equals) {\n        equals = function (a, b) {\n            return a === b;\n        };\n    }\n    oldArr = oldArr.slice();\n    newArr = newArr.slice();\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{ newPos: -1, components: [] }];\n    var oldPos = extractCommon(bestPath[0], newArr, oldArr, 0, equals);\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n        var indices = [];\n        for (var i = 0; i < newArr.length; i++) {\n            indices.push(i);\n        }\n        return [{\n                indices: indices,\n                count: newArr.length,\n                added: false,\n                removed: false\n            }];\n    }\n    function execEditLength() {\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n            var basePath;\n            var addPath = bestPath[diagonalPath - 1];\n            var removePath = bestPath[diagonalPath + 1];\n            var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n            if (addPath) {\n                bestPath[diagonalPath - 1] = undefined;\n            }\n            var canAdd = addPath && addPath.newPos + 1 < newLen;\n            var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n            if (!canAdd && !canRemove) {\n                bestPath[diagonalPath] = undefined;\n                continue;\n            }\n            if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\n                basePath = clonePath(removePath);\n                pushComponent(basePath.components, false, true);\n            }\n            else {\n                basePath = addPath;\n                basePath.newPos++;\n                pushComponent(basePath.components, true, false);\n            }\n            oldPos = extractCommon(basePath, newArr, oldArr, diagonalPath, equals);\n            if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n                return buildValues(basePath.components);\n            }\n            else {\n                bestPath[diagonalPath] = basePath;\n            }\n        }\n        editLength++;\n    }\n    while (editLength <= maxEditLength) {\n        var ret = execEditLength();\n        if (ret) {\n            return ret;\n        }\n    }\n}\nfunction extractCommon(basePath, newArr, oldArr, diagonalPath, equals) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n        newPos++;\n        oldPos++;\n        commonCount++;\n    }\n    if (commonCount) {\n        basePath.components.push({\n            count: commonCount,\n            added: false,\n            removed: false,\n            indices: []\n        });\n    }\n    basePath.newPos = newPos;\n    return oldPos;\n}\nfunction pushComponent(components, added, removed) {\n    var last = components[components.length - 1];\n    if (last && last.added === added && last.removed === removed) {\n        components[components.length - 1] = {\n            count: last.count + 1,\n            added: added,\n            removed: removed,\n            indices: []\n        };\n    }\n    else {\n        components.push({\n            count: 1,\n            added: added,\n            removed: removed,\n            indices: []\n        });\n    }\n}\nfunction buildValues(components) {\n    var componentPos = 0;\n    var componentLen = components.length;\n    var newPos = 0;\n    var oldPos = 0;\n    for (; componentPos < componentLen; componentPos++) {\n        var component = components[componentPos];\n        if (!component.removed) {\n            var indices = [];\n            for (var i = newPos; i < newPos + component.count; i++) {\n                indices.push(i);\n            }\n            component.indices = indices;\n            newPos += component.count;\n            if (!component.added) {\n                oldPos += component.count;\n            }\n        }\n        else {\n            for (var i = oldPos; i < oldPos + component.count; i++) {\n                component.indices.push(i);\n            }\n            oldPos += component.count;\n        }\n    }\n    return components;\n}\nfunction clonePath(path) {\n    return { newPos: path.newPos, components: path.components.slice(0) };\n}\nexport default function arrayDiff(oldArr, newArr, equal) {\n    return diff(oldArr, newArr, equal);\n}\n","import { createElement } from './core';\nimport ZRImage from '../graphic/Image';\nimport { DEFAULT_FONT, getLineHeight } from '../contain/text';\nimport { map } from '../core/util';\nimport { normalizeLineDash } from '../graphic/helper/dashStyle';\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\nfunction round3(val) {\n    return mathRound(val * 1e3) / 1e3;\n}\nfunction round4(val) {\n    return mathRound(val * 1e4) / 1e4;\n}\nfunction isAroundZero(val) {\n    return val < EPSILON && val > -EPSILON;\n}\nfunction pathHasFill(style) {\n    var fill = style.fill;\n    return fill != null && fill !== NONE;\n}\nfunction pathHasStroke(style) {\n    var stroke = style.stroke;\n    return stroke != null && stroke !== NONE;\n}\nfunction setTransform(svgEl, m) {\n    if (m) {\n        attr(svgEl, 'transform', 'matrix('\n            + round3(m[0]) + ','\n            + round3(m[1]) + ','\n            + round3(m[2]) + ','\n            + round3(m[3]) + ','\n            + round4(m[4]) + ','\n            + round4(m[5])\n            + ')');\n    }\n}\nfunction attr(el, key, val) {\n    if (!val || val.type !== 'linear' && val.type !== 'radial') {\n        el.setAttribute(key, val);\n    }\n}\nfunction attrXLink(el, key, val) {\n    el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\nfunction attrXML(el, key, val) {\n    el.setAttributeNS('http://www.w3.org/XML/1998/namespace', key, val);\n}\nfunction bindStyle(svgEl, style, el) {\n    var opacity = style.opacity == null ? 1 : style.opacity;\n    if (el instanceof ZRImage) {\n        svgEl.style.opacity = opacity + '';\n        return;\n    }\n    if (pathHasFill(style)) {\n        var fill = style.fill;\n        fill = fill === 'transparent' ? NONE : fill;\n        attr(svgEl, 'fill', fill);\n        attr(svgEl, 'fill-opacity', (style.fillOpacity != null ? style.fillOpacity * opacity : opacity) + '');\n    }\n    else {\n        attr(svgEl, 'fill', NONE);\n    }\n    if (pathHasStroke(style)) {\n        var stroke = style.stroke;\n        stroke = stroke === 'transparent' ? NONE : stroke;\n        attr(svgEl, 'stroke', stroke);\n        var strokeWidth = style.lineWidth;\n        var strokeScale_1 = style.strokeNoScale\n            ? el.getLineScale()\n            : 1;\n        attr(svgEl, 'stroke-width', (strokeScale_1 ? strokeWidth / strokeScale_1 : 0) + '');\n        attr(svgEl, 'paint-order', style.strokeFirst ? 'stroke' : 'fill');\n        attr(svgEl, 'stroke-opacity', (style.strokeOpacity != null ? style.strokeOpacity * opacity : opacity) + '');\n        var lineDash = style.lineDash && strokeWidth > 0 && normalizeLineDash(style.lineDash, strokeWidth);\n        if (lineDash) {\n            var lineDashOffset = style.lineDashOffset;\n            if (strokeScale_1 && strokeScale_1 !== 1) {\n                lineDash = map(lineDash, function (rawVal) {\n                    return rawVal / strokeScale_1;\n                });\n                if (lineDashOffset) {\n                    lineDashOffset /= strokeScale_1;\n                    lineDashOffset = mathRound(lineDashOffset);\n                }\n            }\n            attr(svgEl, 'stroke-dasharray', lineDash.join(','));\n            attr(svgEl, 'stroke-dashoffset', (lineDashOffset || 0) + '');\n        }\n        else {\n            attr(svgEl, 'stroke-dasharray', '');\n        }\n        style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n        style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n        style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit + '');\n    }\n    else {\n        attr(svgEl, 'stroke', NONE);\n    }\n}\nvar SVGPathRebuilder = (function () {\n    function SVGPathRebuilder() {\n    }\n    SVGPathRebuilder.prototype.reset = function () {\n        this._d = [];\n        this._str = '';\n    };\n    SVGPathRebuilder.prototype.moveTo = function (x, y) {\n        this._add('M', x, y);\n    };\n    SVGPathRebuilder.prototype.lineTo = function (x, y) {\n        this._add('L', x, y);\n    };\n    SVGPathRebuilder.prototype.bezierCurveTo = function (x, y, x2, y2, x3, y3) {\n        this._add('C', x, y, x2, y2, x3, y3);\n    };\n    SVGPathRebuilder.prototype.quadraticCurveTo = function (x, y, x2, y2) {\n        this._add('Q', x, y, x2, y2);\n    };\n    SVGPathRebuilder.prototype.arc = function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n        this.ellipse(cx, cy, r, r, 0, startAngle, endAngle, anticlockwise);\n    };\n    SVGPathRebuilder.prototype.ellipse = function (cx, cy, rx, ry, psi, startAngle, endAngle, anticlockwise) {\n        var firstCmd = this._d.length === 0;\n        var dTheta = endAngle - startAngle;\n        var clockwise = !anticlockwise;\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive - PI2)\n            || (clockwise ? dTheta >= PI2 : -dTheta >= PI2);\n        var unifiedTheta = dTheta > 0 ? dTheta % PI2 : (dTheta % PI2 + PI2);\n        var large = false;\n        if (isCircle) {\n            large = true;\n        }\n        else if (isAroundZero(dThetaPositive)) {\n            large = false;\n        }\n        else {\n            large = (unifiedTheta >= PI) === !!clockwise;\n        }\n        var x0 = round4(cx + rx * mathCos(startAngle));\n        var y0 = round4(cy + ry * mathSin(startAngle));\n        if (isCircle) {\n            if (clockwise) {\n                dTheta = PI2 - 1e-4;\n            }\n            else {\n                dTheta = -PI2 + 1e-4;\n            }\n            large = true;\n            if (firstCmd) {\n                this._d.push('M', x0, y0);\n            }\n        }\n        var x = round4(cx + rx * mathCos(startAngle + dTheta));\n        var y = round4(cy + ry * mathSin(startAngle + dTheta));\n        if (isNaN(x0) || isNaN(y0) || isNaN(rx) || isNaN(ry) || isNaN(psi) || isNaN(degree) || isNaN(x) || isNaN(y)) {\n            return '';\n        }\n        this._d.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n    };\n    SVGPathRebuilder.prototype.rect = function (x, y, w, h) {\n        this._add('M', x, y);\n        this._add('L', x + w, y);\n        this._add('L', x + w, y + h);\n        this._add('L', x, y + h);\n        this._add('L', x, y);\n    };\n    SVGPathRebuilder.prototype.closePath = function () {\n        if (this._d.length > 0) {\n            this._add('Z');\n        }\n    };\n    SVGPathRebuilder.prototype._add = function (cmd, a, b, c, d, e, f, g, h) {\n        this._d.push(cmd);\n        for (var i = 1; i < arguments.length; i++) {\n            var val = arguments[i];\n            if (isNaN(val)) {\n                this._invalid = true;\n                return;\n            }\n            this._d.push(round4(val));\n        }\n    };\n    SVGPathRebuilder.prototype.generateStr = function () {\n        this._str = this._invalid ? '' : this._d.join(' ');\n        this._d = [];\n    };\n    SVGPathRebuilder.prototype.getStr = function () {\n        return this._str;\n    };\n    return SVGPathRebuilder;\n}());\nvar svgPath = {\n    brush: function (el) {\n        var style = el.style;\n        var svgEl = el.__svgEl;\n        if (!svgEl) {\n            svgEl = createElement('path');\n            el.__svgEl = svgEl;\n        }\n        if (!el.path) {\n            el.createPathProxy();\n        }\n        var path = el.path;\n        if (el.shapeChanged()) {\n            path.beginPath();\n            el.buildPath(path, el.shape);\n            el.pathUpdated();\n        }\n        var pathVersion = path.getVersion();\n        var elExt = el;\n        var svgPathBuilder = elExt.__svgPathBuilder;\n        if (elExt.__svgPathVersion !== pathVersion || !svgPathBuilder || el.style.strokePercent < 1) {\n            if (!svgPathBuilder) {\n                svgPathBuilder = elExt.__svgPathBuilder = new SVGPathRebuilder();\n            }\n            svgPathBuilder.reset();\n            path.rebuildPath(svgPathBuilder, el.style.strokePercent);\n            svgPathBuilder.generateStr();\n            elExt.__svgPathVersion = pathVersion;\n        }\n        attr(svgEl, 'd', svgPathBuilder.getStr());\n        bindStyle(svgEl, style, el);\n        setTransform(svgEl, el.transform);\n    }\n};\nexport { svgPath as path };\nvar svgImage = {\n    brush: function (el) {\n        var style = el.style;\n        var image = style.image;\n        if (image instanceof HTMLImageElement) {\n            image = image.src;\n        }\n        else if (image instanceof HTMLCanvasElement) {\n            image = image.toDataURL();\n        }\n        if (!image) {\n            return;\n        }\n        var x = style.x || 0;\n        var y = style.y || 0;\n        var dw = style.width;\n        var dh = style.height;\n        var svgEl = el.__svgEl;\n        if (!svgEl) {\n            svgEl = createElement('image');\n            el.__svgEl = svgEl;\n        }\n        if (image !== el.__imageSrc) {\n            attrXLink(svgEl, 'href', image);\n            el.__imageSrc = image;\n        }\n        attr(svgEl, 'width', dw + '');\n        attr(svgEl, 'height', dh + '');\n        attr(svgEl, 'x', x + '');\n        attr(svgEl, 'y', y + '');\n        bindStyle(svgEl, style, el);\n        setTransform(svgEl, el.transform);\n    }\n};\nexport { svgImage as image };\nvar TEXT_ALIGN_TO_ANCHOR = {\n    left: 'start',\n    right: 'end',\n    center: 'middle',\n    middle: 'middle'\n};\nfunction adjustTextY(y, lineHeight, textBaseline) {\n    if (textBaseline === 'top') {\n        y += lineHeight / 2;\n    }\n    else if (textBaseline === 'bottom') {\n        y -= lineHeight / 2;\n    }\n    return y;\n}\nvar svgText = {\n    brush: function (el) {\n        var style = el.style;\n        var text = style.text;\n        text != null && (text += '');\n        if (!text || isNaN(style.x) || isNaN(style.y)) {\n            return;\n        }\n        var textSvgEl = el.__svgEl;\n        if (!textSvgEl) {\n            textSvgEl = createElement('text');\n            attrXML(textSvgEl, 'xml:space', 'preserve');\n            el.__svgEl = textSvgEl;\n        }\n        var font = style.font || DEFAULT_FONT;\n        var textSvgElStyle = textSvgEl.style;\n        textSvgElStyle.font = font;\n        textSvgEl.textContent = text;\n        bindStyle(textSvgEl, style, el);\n        setTransform(textSvgEl, el.transform);\n        var x = style.x || 0;\n        var y = adjustTextY(style.y || 0, getLineHeight(font), style.textBaseline);\n        var textAlign = TEXT_ALIGN_TO_ANCHOR[style.textAlign]\n            || style.textAlign;\n        attr(textSvgEl, 'dominant-baseline', 'central');\n        attr(textSvgEl, 'text-anchor', textAlign);\n        attr(textSvgEl, 'x', x + '');\n        attr(textSvgEl, 'y', y + '');\n    }\n};\nexport { svgText as text };\n","import { createElement } from '../core';\nimport * as zrUtil from '../../core/util';\nimport Path from '../../graphic/Path';\nimport ZRImage from '../../graphic/Image';\nimport TSpan from '../../graphic/TSpan';\nimport { path as svgPath, image as svgImage, text as svgText } from '../graphic';\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\nvar Definable = (function () {\n    function Definable(zrId, svgRoot, tagNames, markLabel, domName) {\n        this.nextId = 0;\n        this._domName = '_dom';\n        this.createElement = createElement;\n        this._zrId = zrId;\n        this._svgRoot = svgRoot;\n        this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n        this._markLabel = markLabel;\n        if (domName) {\n            this._domName = domName;\n        }\n    }\n    Definable.prototype.getDefs = function (isForceCreating) {\n        var svgRoot = this._svgRoot;\n        var defs = this._svgRoot.getElementsByTagName('defs');\n        if (defs.length === 0) {\n            if (isForceCreating) {\n                var defs_1 = svgRoot.insertBefore(this.createElement('defs'), svgRoot.firstChild);\n                if (!defs_1.contains) {\n                    defs_1.contains = function (el) {\n                        var children = defs_1.children;\n                        if (!children) {\n                            return false;\n                        }\n                        for (var i = children.length - 1; i >= 0; --i) {\n                            if (children[i] === el) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    };\n                }\n                return defs_1;\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return defs[0];\n        }\n    };\n    Definable.prototype.doUpdate = function (target, onUpdate) {\n        if (!target) {\n            return;\n        }\n        var defs = this.getDefs(false);\n        if (target[this._domName] && defs.contains(target[this._domName])) {\n            if (typeof onUpdate === 'function') {\n                onUpdate(target);\n            }\n        }\n        else {\n            var dom = this.add(target);\n            if (dom) {\n                target[this._domName] = dom;\n            }\n        }\n    };\n    Definable.prototype.add = function (target) {\n        return null;\n    };\n    Definable.prototype.addDom = function (dom) {\n        var defs = this.getDefs(true);\n        if (dom.parentNode !== defs) {\n            defs.appendChild(dom);\n        }\n    };\n    Definable.prototype.removeDom = function (target) {\n        var defs = this.getDefs(false);\n        if (defs && target[this._domName]) {\n            defs.removeChild(target[this._domName]);\n            target[this._domName] = null;\n        }\n    };\n    Definable.prototype.getDoms = function () {\n        var defs = this.getDefs(false);\n        if (!defs) {\n            return [];\n        }\n        var doms = [];\n        zrUtil.each(this._tagNames, function (tagName) {\n            var tags = defs.getElementsByTagName(tagName);\n            for (var i = 0; i < tags.length; i++) {\n                doms.push(tags[i]);\n            }\n        });\n        return doms;\n    };\n    Definable.prototype.markAllUnused = function () {\n        var doms = this.getDoms();\n        var that = this;\n        zrUtil.each(doms, function (dom) {\n            dom[that._markLabel] = MARK_UNUSED;\n        });\n    };\n    Definable.prototype.markDomUsed = function (dom) {\n        dom && (dom[this._markLabel] = MARK_USED);\n    };\n    ;\n    Definable.prototype.markDomUnused = function (dom) {\n        dom && (dom[this._markLabel] = MARK_UNUSED);\n    };\n    ;\n    Definable.prototype.isDomUnused = function (dom) {\n        return dom && dom[this._markLabel] !== MARK_USED;\n    };\n    Definable.prototype.removeUnused = function () {\n        var _this = this;\n        var defs = this.getDefs(false);\n        if (!defs) {\n            return;\n        }\n        var doms = this.getDoms();\n        zrUtil.each(doms, function (dom) {\n            if (_this.isDomUnused(dom)) {\n                defs.removeChild(dom);\n            }\n        });\n    };\n    Definable.prototype.getSvgProxy = function (displayable) {\n        if (displayable instanceof Path) {\n            return svgPath;\n        }\n        else if (displayable instanceof ZRImage) {\n            return svgImage;\n        }\n        else if (displayable instanceof TSpan) {\n            return svgText;\n        }\n        else {\n            return svgPath;\n        }\n    };\n    Definable.prototype.getSvgElement = function (displayable) {\n        return displayable.__svgEl;\n    };\n    return Definable;\n}());\nexport default Definable;\n","import { __extends } from \"tslib\";\nimport Definable from './Definable';\nimport * as zrUtil from '../../core/util';\nimport * as colorTool from '../../tool/color';\nfunction isLinearGradient(value) {\n    return value.type === 'linear';\n}\nfunction isRadialGradient(value) {\n    return value.type === 'radial';\n}\nfunction isGradient(value) {\n    return value && (value.type === 'linear'\n        || value.type === 'radial');\n}\nvar GradientManager = (function (_super) {\n    __extends(GradientManager, _super);\n    function GradientManager(zrId, svgRoot) {\n        return _super.call(this, zrId, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__') || this;\n    }\n    GradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n        if (displayable && displayable.style) {\n            var that_1 = this;\n            zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n                var value = displayable.style[fillOrStroke];\n                if (isGradient(value)) {\n                    var gradient = value;\n                    var defs = that_1.getDefs(true);\n                    var dom = void 0;\n                    if (gradient.__dom) {\n                        dom = gradient.__dom;\n                        if (!defs.contains(gradient.__dom)) {\n                            that_1.addDom(dom);\n                        }\n                    }\n                    else {\n                        dom = that_1.add(gradient);\n                    }\n                    that_1.markUsed(displayable);\n                    var id = dom.getAttribute('id');\n                    svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n                }\n            });\n        }\n    };\n    GradientManager.prototype.add = function (gradient) {\n        var dom;\n        if (isLinearGradient(gradient)) {\n            dom = this.createElement('linearGradient');\n        }\n        else if (isRadialGradient(gradient)) {\n            dom = this.createElement('radialGradient');\n        }\n        else {\n            zrUtil.logError('Illegal gradient type.');\n            return null;\n        }\n        gradient.id = gradient.id || this.nextId++;\n        dom.setAttribute('id', 'zr' + this._zrId\n            + '-gradient-' + gradient.id);\n        this.updateDom(gradient, dom);\n        this.addDom(dom);\n        return dom;\n    };\n    GradientManager.prototype.update = function (gradient) {\n        if (!isGradient(gradient)) {\n            return;\n        }\n        var that = this;\n        this.doUpdate(gradient, function () {\n            var dom = gradient.__dom;\n            if (!dom) {\n                return;\n            }\n            var tagName = dom.tagName;\n            var type = gradient.type;\n            if (type === 'linear' && tagName === 'linearGradient'\n                || type === 'radial' && tagName === 'radialGradient') {\n                that.updateDom(gradient, gradient.__dom);\n            }\n            else {\n                that.removeDom(gradient);\n                that.add(gradient);\n            }\n        });\n    };\n    GradientManager.prototype.updateDom = function (gradient, dom) {\n        if (isLinearGradient(gradient)) {\n            dom.setAttribute('x1', gradient.x + '');\n            dom.setAttribute('y1', gradient.y + '');\n            dom.setAttribute('x2', gradient.x2 + '');\n            dom.setAttribute('y2', gradient.y2 + '');\n        }\n        else if (isRadialGradient(gradient)) {\n            dom.setAttribute('cx', gradient.x + '');\n            dom.setAttribute('cy', gradient.y + '');\n            dom.setAttribute('r', gradient.r + '');\n        }\n        else {\n            zrUtil.logError('Illegal gradient type.');\n            return;\n        }\n        if (gradient.global) {\n            dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n        }\n        else {\n            dom.setAttribute('gradientUnits', 'objectBoundingBox');\n        }\n        dom.innerHTML = '';\n        var colors = gradient.colorStops;\n        for (var i = 0, len = colors.length; i < len; ++i) {\n            var stop_1 = this.createElement('stop');\n            stop_1.setAttribute('offset', colors[i].offset * 100 + '%');\n            var color = colors[i].color;\n            if (color.indexOf('rgba') > -1) {\n                var opacity = colorTool.parse(color)[3];\n                var hex = colorTool.toHex(color);\n                stop_1.setAttribute('stop-color', '#' + hex);\n                stop_1.setAttribute('stop-opacity', opacity + '');\n            }\n            else {\n                stop_1.setAttribute('stop-color', colors[i].color);\n            }\n            dom.appendChild(stop_1);\n        }\n        gradient.__dom = dom;\n    };\n    GradientManager.prototype.markUsed = function (displayable) {\n        if (displayable.style) {\n            var gradient = displayable.style.fill;\n            if (gradient && gradient.__dom) {\n                _super.prototype.markDomUsed.call(this, gradient.__dom);\n            }\n            gradient = displayable.style.stroke;\n            if (gradient && gradient.__dom) {\n                _super.prototype.markDomUsed.call(this, gradient.__dom);\n            }\n        }\n    };\n    return GradientManager;\n}(Definable));\nexport default GradientManager;\n","import { __extends } from \"tslib\";\nimport Definable from './Definable';\nimport * as zrUtil from '../../core/util';\nimport { createOrUpdateImage } from '../../graphic/helper/image';\nimport WeakMap from '../../core/WeakMap';\nfunction isPattern(value) {\n    return value && (!!value.image || !!value.svgElement);\n}\nvar patternDomMap = new WeakMap();\nvar PatternManager = (function (_super) {\n    __extends(PatternManager, _super);\n    function PatternManager(zrId, svgRoot) {\n        return _super.call(this, zrId, svgRoot, ['pattern'], '__pattern_in_use__') || this;\n    }\n    PatternManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n        if (displayable && displayable.style) {\n            var that_1 = this;\n            zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n                var pattern = displayable.style[fillOrStroke];\n                if (isPattern(pattern)) {\n                    var defs = that_1.getDefs(true);\n                    var dom = patternDomMap.get(pattern);\n                    if (dom) {\n                        if (!defs.contains(dom)) {\n                            that_1.addDom(dom);\n                        }\n                    }\n                    else {\n                        dom = that_1.add(pattern);\n                    }\n                    that_1.markUsed(displayable);\n                    var id = dom.getAttribute('id');\n                    svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n                }\n            });\n        }\n    };\n    PatternManager.prototype.add = function (pattern) {\n        if (!isPattern(pattern)) {\n            return;\n        }\n        var dom = this.createElement('pattern');\n        pattern.id = pattern.id == null ? this.nextId++ : pattern.id;\n        dom.setAttribute('id', 'zr' + this._zrId\n            + '-pattern-' + pattern.id);\n        dom.setAttribute('x', '0');\n        dom.setAttribute('y', '0');\n        dom.setAttribute('patternUnits', 'userSpaceOnUse');\n        this.updateDom(pattern, dom);\n        this.addDom(dom);\n        return dom;\n    };\n    PatternManager.prototype.update = function (pattern) {\n        if (!isPattern(pattern)) {\n            return;\n        }\n        var that = this;\n        this.doUpdate(pattern, function () {\n            var dom = patternDomMap.get(pattern);\n            that.updateDom(pattern, dom);\n        });\n    };\n    PatternManager.prototype.updateDom = function (pattern, patternDom) {\n        var svgElement = pattern.svgElement;\n        if (svgElement instanceof SVGElement) {\n            if (svgElement.parentNode !== patternDom) {\n                patternDom.innerHTML = '';\n                patternDom.appendChild(svgElement);\n                patternDom.setAttribute('width', pattern.svgWidth + '');\n                patternDom.setAttribute('height', pattern.svgHeight + '');\n            }\n        }\n        else {\n            var img = void 0;\n            var prevImage = patternDom.getElementsByTagName('image');\n            if (prevImage.length) {\n                if (pattern.image) {\n                    img = prevImage[0];\n                }\n                else {\n                    patternDom.removeChild(prevImage[0]);\n                    return;\n                }\n            }\n            else if (pattern.image) {\n                img = this.createElement('image');\n            }\n            if (img) {\n                var imageSrc = void 0;\n                if (typeof pattern.image === 'string') {\n                    imageSrc = pattern.image;\n                }\n                else if (pattern.image instanceof HTMLImageElement) {\n                    imageSrc = pattern.image.src;\n                }\n                else if (pattern.image instanceof HTMLCanvasElement) {\n                    imageSrc = pattern.image.toDataURL();\n                }\n                if (imageSrc) {\n                    img.setAttribute('href', imageSrc);\n                    img.setAttribute('x', '0');\n                    img.setAttribute('y', '0');\n                    var hostEl = {\n                        dirty: function () { }\n                    };\n                    var createdImage = createOrUpdateImage(imageSrc, img, hostEl, function (img) {\n                        patternDom.setAttribute('width', img.width + '');\n                        patternDom.setAttribute('height', img.height + '');\n                    });\n                    if (createdImage && createdImage.width && createdImage.height) {\n                        patternDom.setAttribute('width', createdImage.width + '');\n                        patternDom.setAttribute('height', createdImage.height + '');\n                    }\n                    patternDom.appendChild(img);\n                }\n            }\n        }\n        var x = pattern.x || 0;\n        var y = pattern.y || 0;\n        var rotation = (pattern.rotation || 0) / Math.PI * 180;\n        var scaleX = pattern.scaleX || 1;\n        var scaleY = pattern.scaleY || 1;\n        var transform = \"translate(\" + x + \", \" + y + \") rotate(\" + rotation + \") scale(\" + scaleX + \", \" + scaleY + \")\";\n        patternDom.setAttribute('patternTransform', transform);\n        patternDomMap.set(pattern, patternDom);\n    };\n    PatternManager.prototype.markUsed = function (displayable) {\n        if (displayable.style) {\n            if (isPattern(displayable.style.fill)) {\n                _super.prototype.markDomUsed.call(this, patternDomMap.get(displayable.style.fill));\n            }\n            if (isPattern(displayable.style.stroke)) {\n                _super.prototype.markDomUsed.call(this, patternDomMap.get(displayable.style.stroke));\n            }\n        }\n    };\n    return PatternManager;\n}(Definable));\nexport default PatternManager;\n","import { __extends } from \"tslib\";\nimport Definable from './Definable';\nimport * as zrUtil from '../../core/util';\nimport { isClipPathChanged } from '../../canvas/helper';\nfunction generateClipPathsKey(clipPaths) {\n    var key = [];\n    if (clipPaths) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            key.push(clipPath.id);\n        }\n    }\n    return key.join(',');\n}\nexport function hasClipPath(displayable) {\n    var clipPaths = displayable.__clipPaths;\n    return clipPaths && clipPaths.length > 0;\n}\nvar ClippathManager = (function (_super) {\n    __extends(ClippathManager, _super);\n    function ClippathManager(zrId, svgRoot) {\n        var _this = _super.call(this, zrId, svgRoot, 'clipPath', '__clippath_in_use__') || this;\n        _this._refGroups = {};\n        _this._keyDuplicateCount = {};\n        return _this;\n    }\n    ClippathManager.prototype.markAllUnused = function () {\n        _super.prototype.markAllUnused.call(this);\n        for (var key in this._refGroups) {\n            this.markDomUnused(this._refGroups[key]);\n        }\n        this._keyDuplicateCount = {};\n    };\n    ClippathManager.prototype._getClipPathGroup = function (displayable, prevDisplayable) {\n        if (!hasClipPath(displayable)) {\n            return;\n        }\n        var clipPaths = displayable.__clipPaths;\n        var keyDuplicateCount = this._keyDuplicateCount;\n        var clipPathKey = generateClipPathsKey(clipPaths);\n        if (isClipPathChanged(clipPaths, prevDisplayable && prevDisplayable.__clipPaths)) {\n            keyDuplicateCount[clipPathKey] = keyDuplicateCount[clipPathKey] || 0;\n            keyDuplicateCount[clipPathKey] && (clipPathKey += '-' + keyDuplicateCount[clipPathKey]);\n            keyDuplicateCount[clipPathKey]++;\n        }\n        return this._refGroups[clipPathKey]\n            || (this._refGroups[clipPathKey] = this.createElement('g'));\n    };\n    ClippathManager.prototype.update = function (displayable, prevDisplayable) {\n        var clipGroup = this._getClipPathGroup(displayable, prevDisplayable);\n        if (clipGroup) {\n            this.markDomUsed(clipGroup);\n            this.updateDom(clipGroup, displayable.__clipPaths);\n        }\n        return clipGroup;\n    };\n    ;\n    ClippathManager.prototype.updateDom = function (parentEl, clipPaths) {\n        if (clipPaths && clipPaths.length > 0) {\n            var defs = this.getDefs(true);\n            var clipPath = clipPaths[0];\n            var clipPathEl = void 0;\n            var id = void 0;\n            if (clipPath._dom) {\n                id = clipPath._dom.getAttribute('id');\n                clipPathEl = clipPath._dom;\n                if (!defs.contains(clipPathEl)) {\n                    defs.appendChild(clipPathEl);\n                }\n            }\n            else {\n                id = 'zr' + this._zrId + '-clip-' + this.nextId;\n                ++this.nextId;\n                clipPathEl = this.createElement('clipPath');\n                clipPathEl.setAttribute('id', id);\n                defs.appendChild(clipPathEl);\n                clipPath._dom = clipPathEl;\n            }\n            var svgProxy = this.getSvgProxy(clipPath);\n            svgProxy.brush(clipPath);\n            var pathEl = this.getSvgElement(clipPath);\n            clipPathEl.innerHTML = '';\n            clipPathEl.appendChild(pathEl);\n            parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n            if (clipPaths.length > 1) {\n                this.updateDom(clipPathEl, clipPaths.slice(1));\n            }\n        }\n        else {\n            if (parentEl) {\n                parentEl.setAttribute('clip-path', 'none');\n            }\n        }\n    };\n    ;\n    ClippathManager.prototype.markUsed = function (displayable) {\n        var _this = this;\n        if (displayable.__clipPaths) {\n            zrUtil.each(displayable.__clipPaths, function (clipPath) {\n                if (clipPath._dom) {\n                    _super.prototype.markDomUsed.call(_this, clipPath._dom);\n                }\n            });\n        }\n    };\n    ;\n    ClippathManager.prototype.removeUnused = function () {\n        _super.prototype.removeUnused.call(this);\n        var newRefGroupsMap = {};\n        for (var key in this._refGroups) {\n            var group = this._refGroups[key];\n            if (!this.isDomUnused(group)) {\n                newRefGroupsMap[key] = group;\n            }\n            else if (group.parentNode) {\n                group.parentNode.removeChild(group);\n            }\n        }\n        this._refGroups = newRefGroupsMap;\n    };\n    return ClippathManager;\n}(Definable));\nexport default ClippathManager;\n","import { __extends } from \"tslib\";\nimport Definable from './Definable';\nvar ShadowManager = (function (_super) {\n    __extends(ShadowManager, _super);\n    function ShadowManager(zrId, svgRoot) {\n        var _this = _super.call(this, zrId, svgRoot, ['filter'], '__filter_in_use__', '_shadowDom') || this;\n        _this._shadowDomMap = {};\n        _this._shadowDomPool = [];\n        return _this;\n    }\n    ShadowManager.prototype._getFromPool = function () {\n        var shadowDom = this._shadowDomPool.pop();\n        if (!shadowDom) {\n            shadowDom = this.createElement('filter');\n            shadowDom.setAttribute('id', 'zr' + this._zrId + '-shadow-' + this.nextId++);\n            var domChild = this.createElement('feDropShadow');\n            shadowDom.appendChild(domChild);\n            this.addDom(shadowDom);\n        }\n        return shadowDom;\n    };\n    ShadowManager.prototype.update = function (svgElement, displayable) {\n        var style = displayable.style;\n        if (hasShadow(style)) {\n            var shadowKey = getShadowKey(displayable);\n            var shadowDom = displayable._shadowDom = this._shadowDomMap[shadowKey];\n            if (!shadowDom) {\n                shadowDom = this._getFromPool();\n                this._shadowDomMap[shadowKey] = shadowDom;\n            }\n            this.updateDom(svgElement, displayable, shadowDom);\n        }\n        else {\n            this.remove(svgElement, displayable);\n        }\n    };\n    ShadowManager.prototype.remove = function (svgElement, displayable) {\n        if (displayable._shadowDom != null) {\n            displayable._shadowDom = null;\n            svgElement.style.filter = '';\n        }\n    };\n    ShadowManager.prototype.updateDom = function (svgElement, displayable, shadowDom) {\n        var domChild = shadowDom.children[0];\n        var style = displayable.style;\n        var globalScale = displayable.getGlobalScale();\n        var scaleX = globalScale[0];\n        var scaleY = globalScale[1];\n        if (!scaleX || !scaleY) {\n            return;\n        }\n        var offsetX = style.shadowOffsetX || 0;\n        var offsetY = style.shadowOffsetY || 0;\n        var blur = style.shadowBlur;\n        var color = style.shadowColor;\n        domChild.setAttribute('dx', offsetX / scaleX + '');\n        domChild.setAttribute('dy', offsetY / scaleY + '');\n        domChild.setAttribute('flood-color', color);\n        var stdDx = blur / 2 / scaleX;\n        var stdDy = blur / 2 / scaleY;\n        var stdDeviation = stdDx + ' ' + stdDy;\n        domChild.setAttribute('stdDeviation', stdDeviation);\n        shadowDom.setAttribute('x', '-100%');\n        shadowDom.setAttribute('y', '-100%');\n        shadowDom.setAttribute('width', '300%');\n        shadowDom.setAttribute('height', '300%');\n        displayable._shadowDom = shadowDom;\n        var id = shadowDom.getAttribute('id');\n        svgElement.style.filter = 'url(#' + id + ')';\n    };\n    ShadowManager.prototype.removeUnused = function () {\n        var defs = this.getDefs(false);\n        if (!defs) {\n            return;\n        }\n        var shadowDomsPool = this._shadowDomPool;\n        for (var key in this._shadowDomMap) {\n            var dom = this._shadowDomMap[key];\n            shadowDomsPool.push(dom);\n        }\n        this._shadowDomMap = {};\n    };\n    return ShadowManager;\n}(Definable));\nexport default ShadowManager;\nfunction hasShadow(style) {\n    return style\n        && (style.shadowBlur || style.shadowOffsetX || style.shadowOffsetY);\n}\nfunction getShadowKey(displayable) {\n    var style = displayable.style;\n    var globalScale = displayable.getGlobalScale();\n    return [\n        style.shadowColor,\n        (style.shadowBlur || 0).toFixed(2),\n        (style.shadowOffsetX || 0).toFixed(2),\n        (style.shadowOffsetY || 0).toFixed(2),\n        globalScale[0],\n        globalScale[1]\n    ].join(',');\n}\n","import { createElement } from './core';\nimport * as util from '../core/util';\nimport Path from '../graphic/Path';\nimport ZRImage from '../graphic/Image';\nimport TSpan from '../graphic/TSpan';\nimport arrayDiff from '../core/arrayDiff';\nimport GradientManager from './helper/GradientManager';\nimport PatternManager from './helper/PatternManager';\nimport ClippathManager, { hasClipPath } from './helper/ClippathManager';\nimport ShadowManager from './helper/ShadowManager';\nimport { path as svgPath, image as svgImage, text as svgText } from './graphic';\nfunction parseInt10(val) {\n    return parseInt(val, 10);\n}\nfunction getSvgProxy(el) {\n    if (el instanceof Path) {\n        return svgPath;\n    }\n    else if (el instanceof ZRImage) {\n        return svgImage;\n    }\n    else if (el instanceof TSpan) {\n        return svgText;\n    }\n    else {\n        return svgPath;\n    }\n}\nfunction checkParentAvailable(parent, child) {\n    return child && parent && child.parentNode !== parent;\n}\nfunction insertAfter(parent, child, prevSibling) {\n    if (checkParentAvailable(parent, child) && prevSibling) {\n        var nextSibling = prevSibling.nextSibling;\n        nextSibling ? parent.insertBefore(child, nextSibling)\n            : parent.appendChild(child);\n    }\n}\nfunction prepend(parent, child) {\n    if (checkParentAvailable(parent, child)) {\n        var firstChild = parent.firstChild;\n        firstChild ? parent.insertBefore(child, firstChild)\n            : parent.appendChild(child);\n    }\n}\nfunction remove(parent, child) {\n    if (child && parent && child.parentNode === parent) {\n        parent.removeChild(child);\n    }\n}\nfunction removeFromMyParent(child) {\n    if (child && child.parentNode) {\n        child.parentNode.removeChild(child);\n    }\n}\nfunction getSvgElement(displayable) {\n    return displayable.__svgEl;\n}\nvar SVGPainter = (function () {\n    function SVGPainter(root, storage, opts, zrId) {\n        this.type = 'svg';\n        this.refreshHover = createMethodNotSupport('refreshHover');\n        this.pathToImage = createMethodNotSupport('pathToImage');\n        this.configLayer = createMethodNotSupport('configLayer');\n        this.root = root;\n        this.storage = storage;\n        this._opts = opts = util.extend({}, opts || {});\n        var svgDom = createElement('svg');\n        svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns', 'http://www.w3.org/2000/svg');\n        svgDom.setAttributeNS('http://www.w3.org/2000/xmlns/', 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\n        svgDom.setAttribute('version', '1.1');\n        svgDom.setAttribute('baseProfile', 'full');\n        svgDom.style.cssText = 'user-select:none;position:absolute;left:0;top:0;';\n        var bgRoot = createElement('g');\n        svgDom.appendChild(bgRoot);\n        var svgRoot = createElement('g');\n        svgDom.appendChild(svgRoot);\n        this._gradientManager = new GradientManager(zrId, svgRoot);\n        this._patternManager = new PatternManager(zrId, svgRoot);\n        this._clipPathManager = new ClippathManager(zrId, svgRoot);\n        this._shadowManager = new ShadowManager(zrId, svgRoot);\n        var viewport = document.createElement('div');\n        viewport.style.cssText = 'overflow:hidden;position:relative';\n        this._svgDom = svgDom;\n        this._svgRoot = svgRoot;\n        this._backgroundRoot = bgRoot;\n        this._viewport = viewport;\n        root.appendChild(viewport);\n        viewport.appendChild(svgDom);\n        this.resize(opts.width, opts.height);\n        this._visibleList = [];\n    }\n    SVGPainter.prototype.getType = function () {\n        return 'svg';\n    };\n    SVGPainter.prototype.getViewportRoot = function () {\n        return this._viewport;\n    };\n    SVGPainter.prototype.getSvgDom = function () {\n        return this._svgDom;\n    };\n    SVGPainter.prototype.getSvgRoot = function () {\n        return this._svgRoot;\n    };\n    SVGPainter.prototype.getViewportRootOffset = function () {\n        var viewportRoot = this.getViewportRoot();\n        if (viewportRoot) {\n            return {\n                offsetLeft: viewportRoot.offsetLeft || 0,\n                offsetTop: viewportRoot.offsetTop || 0\n            };\n        }\n    };\n    SVGPainter.prototype.refresh = function () {\n        var list = this.storage.getDisplayList(true);\n        this._paintList(list);\n    };\n    SVGPainter.prototype.setBackgroundColor = function (backgroundColor) {\n        if (this._backgroundRoot && this._backgroundNode) {\n            this._backgroundRoot.removeChild(this._backgroundNode);\n        }\n        var bgNode = createElement('rect');\n        bgNode.setAttribute('width', this.getWidth());\n        bgNode.setAttribute('height', this.getHeight());\n        bgNode.setAttribute('x', 0);\n        bgNode.setAttribute('y', 0);\n        bgNode.setAttribute('id', 0);\n        bgNode.style.fill = backgroundColor;\n        this._backgroundRoot.appendChild(bgNode);\n        this._backgroundNode = bgNode;\n    };\n    SVGPainter.prototype.createSVGElement = function (tag) {\n        return createElement(tag);\n    };\n    SVGPainter.prototype.paintOne = function (el) {\n        var svgProxy = getSvgProxy(el);\n        svgProxy && svgProxy.brush(el);\n        return getSvgElement(el);\n    };\n    SVGPainter.prototype._paintList = function (list) {\n        var gradientManager = this._gradientManager;\n        var patternManager = this._patternManager;\n        var clipPathManager = this._clipPathManager;\n        var shadowManager = this._shadowManager;\n        gradientManager.markAllUnused();\n        patternManager.markAllUnused();\n        clipPathManager.markAllUnused();\n        shadowManager.markAllUnused();\n        var svgRoot = this._svgRoot;\n        var visibleList = this._visibleList;\n        var listLen = list.length;\n        var newVisibleList = [];\n        for (var i = 0; i < listLen; i++) {\n            var displayable = list[i];\n            var svgProxy = getSvgProxy(displayable);\n            var svgElement = getSvgElement(displayable);\n            if (!displayable.invisible) {\n                if (displayable.__dirty || !svgElement) {\n                    svgProxy && svgProxy.brush(displayable);\n                    svgElement = getSvgElement(displayable);\n                    if (svgElement && displayable.style) {\n                        gradientManager.update(displayable.style.fill);\n                        gradientManager.update(displayable.style.stroke);\n                        patternManager.update(displayable.style.fill);\n                        patternManager.update(displayable.style.stroke);\n                        shadowManager.update(svgElement, displayable);\n                    }\n                    displayable.__dirty = 0;\n                }\n                if (svgElement) {\n                    newVisibleList.push(displayable);\n                }\n            }\n        }\n        var diff = arrayDiff(visibleList, newVisibleList);\n        var prevSvgElement;\n        var topPrevSvgElement;\n        for (var i = 0; i < diff.length; i++) {\n            var item = diff[i];\n            if (item.removed) {\n                for (var k = 0; k < item.count; k++) {\n                    var displayable = visibleList[item.indices[k]];\n                    var svgElement = getSvgElement(displayable);\n                    hasClipPath(displayable) ? removeFromMyParent(svgElement)\n                        : remove(svgRoot, svgElement);\n                }\n            }\n        }\n        var prevDisplayable;\n        var currentClipGroup;\n        for (var i = 0; i < diff.length; i++) {\n            var item = diff[i];\n            if (item.removed) {\n                continue;\n            }\n            for (var k = 0; k < item.count; k++) {\n                var displayable = newVisibleList[item.indices[k]];\n                var clipGroup = clipPathManager.update(displayable, prevDisplayable);\n                if (clipGroup !== currentClipGroup) {\n                    prevSvgElement = topPrevSvgElement;\n                    if (clipGroup) {\n                        prevSvgElement ? insertAfter(svgRoot, clipGroup, prevSvgElement)\n                            : prepend(svgRoot, clipGroup);\n                        topPrevSvgElement = clipGroup;\n                        prevSvgElement = null;\n                    }\n                    currentClipGroup = clipGroup;\n                }\n                var svgElement = getSvgElement(displayable);\n                prevSvgElement\n                    ? insertAfter(currentClipGroup || svgRoot, svgElement, prevSvgElement)\n                    : prepend(currentClipGroup || svgRoot, svgElement);\n                prevSvgElement = svgElement || prevSvgElement;\n                if (!currentClipGroup) {\n                    topPrevSvgElement = prevSvgElement;\n                }\n                gradientManager.markUsed(displayable);\n                gradientManager.addWithoutUpdate(svgElement, displayable);\n                patternManager.markUsed(displayable);\n                patternManager.addWithoutUpdate(svgElement, displayable);\n                clipPathManager.markUsed(displayable);\n                prevDisplayable = displayable;\n            }\n        }\n        gradientManager.removeUnused();\n        patternManager.removeUnused();\n        clipPathManager.removeUnused();\n        shadowManager.removeUnused();\n        this._visibleList = newVisibleList;\n    };\n    SVGPainter.prototype._getDefs = function (isForceCreating) {\n        var svgRoot = this._svgDom;\n        var defs = svgRoot.getElementsByTagName('defs');\n        if (defs.length === 0) {\n            if (isForceCreating) {\n                var defs_1 = svgRoot.insertBefore(createElement('defs'), svgRoot.firstChild);\n                if (!defs_1.contains) {\n                    defs_1.contains = function (el) {\n                        var children = defs_1.children;\n                        if (!children) {\n                            return false;\n                        }\n                        for (var i = children.length - 1; i >= 0; --i) {\n                            if (children[i] === el) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    };\n                }\n                return defs_1;\n            }\n            else {\n                return null;\n            }\n        }\n        else {\n            return defs[0];\n        }\n    };\n    SVGPainter.prototype.resize = function (width, height) {\n        var viewport = this._viewport;\n        viewport.style.display = 'none';\n        var opts = this._opts;\n        width != null && (opts.width = width);\n        height != null && (opts.height = height);\n        width = this._getSize(0);\n        height = this._getSize(1);\n        viewport.style.display = '';\n        if (this._width !== width || this._height !== height) {\n            this._width = width;\n            this._height = height;\n            var viewportStyle = viewport.style;\n            viewportStyle.width = width + 'px';\n            viewportStyle.height = height + 'px';\n            var svgRoot = this._svgDom;\n            svgRoot.setAttribute('width', width + '');\n            svgRoot.setAttribute('height', height + '');\n        }\n        if (this._backgroundNode) {\n            this._backgroundNode.setAttribute('width', width);\n            this._backgroundNode.setAttribute('height', height);\n        }\n    };\n    SVGPainter.prototype.getWidth = function () {\n        return this._width;\n    };\n    SVGPainter.prototype.getHeight = function () {\n        return this._height;\n    };\n    SVGPainter.prototype._getSize = function (whIdx) {\n        var opts = this._opts;\n        var wh = ['width', 'height'][whIdx];\n        var cwh = ['clientWidth', 'clientHeight'][whIdx];\n        var plt = ['paddingLeft', 'paddingTop'][whIdx];\n        var prb = ['paddingRight', 'paddingBottom'][whIdx];\n        if (opts[wh] != null && opts[wh] !== 'auto') {\n            return parseFloat(opts[wh]);\n        }\n        var root = this.root;\n        var stl = document.defaultView.getComputedStyle(root);\n        return ((root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n            - (parseInt10(stl[plt]) || 0)\n            - (parseInt10(stl[prb]) || 0)) | 0;\n    };\n    SVGPainter.prototype.dispose = function () {\n        this.root.innerHTML = '';\n        this._svgRoot\n            = this._backgroundRoot\n                = this._svgDom\n                    = this._backgroundNode\n                        = this._viewport\n                            = this.storage\n                                = null;\n    };\n    SVGPainter.prototype.clear = function () {\n        var viewportNode = this._viewport;\n        if (viewportNode && viewportNode.parentNode) {\n            viewportNode.parentNode.removeChild(viewportNode);\n        }\n    };\n    SVGPainter.prototype.toDataURL = function () {\n        this.refresh();\n        var svgDom = this._svgDom;\n        var outerHTML = svgDom.outerHTML\n            || (svgDom.parentNode && svgDom.parentNode).innerHTML;\n        var html = encodeURIComponent(outerHTML.replace(/></g, '>\\n\\r<'));\n        return 'data:image/svg+xml;charset=UTF-8,' + html;\n    };\n    return SVGPainter;\n}());\nfunction createMethodNotSupport(method) {\n    return function () {\n        util.logError('In SVG mode painter not support method \"' + method + '\"');\n    };\n}\nexport default SVGPainter;\n","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport SVGPainter from 'zrender/lib/svg/Painter';\nexport function install(registers) {\n  registers.registerPainter('svg', SVGPainter);\n}"],"sourceRoot":""}