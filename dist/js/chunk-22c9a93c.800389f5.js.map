{"version":3,"sources":["webpack:///./src/components/世界地图.vue?02e3","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./src/components/世界地图.vue?2e4a","webpack:///./src/components/世界地图.vue?936e","webpack:///src/components/世界地图.vue","webpack:///./src/components/世界地图.vue?acef","webpack:///./src/components/世界地图.vue"],"names":["_arrayWithHoles","arr","Array","isArray","_iterableToArrayLimit","i","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","_nonIterableRest","TypeError","_slicedToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","render","_vm","this","_h","$createElement","_c","_self","ref","staticClass","attrs","_v","tooltips","Year","举办时间","举办国家","主办城市","口号","class","btn","timeline","paused","on","pauseAndPlay","staticRenderFns","style","opacity","duration","add","component"],"mappings":"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","file":"js/chunk-22c9a93c.800389f5.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./世界地图.vue?vue&type=style&index=0&id=613552cb&scoped=true&lang=less&\"","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./世界地图.vue?vue&type=style&index=1&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"Box\",staticClass:\"Box\"},[_c('div',{ref:\"outer\",attrs:{\"id\":\"WorldMap\"}}),_c('div',{staticClass:\"tooltips\"},[_c('div',[_vm._v(_vm._s(_vm.tooltips.Year))]),_c('div',[_vm._v(_vm._s(_vm.tooltips.举办时间))]),_c('div',[_vm._v(_vm._s(_vm.tooltips.举办国家)+\" \"+_vm._s(_vm.tooltips.主办城市))]),_c('div',[_vm._v(_vm._s(_vm.tooltips.口号 || \"\"))]),_c('transition',[_c('i',{class:{ btn: true, 'el-icon-video-pause': _vm.timeline.paused, 'el-icon-video-play': !_vm.timeline.paused },attrs:{\"circle\":\"\"},on:{\"click\":_vm.pauseAndPlay}})])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"Box\" ref=\"Box\">\r\n        <div ref=\"outer\" id=\"WorldMap\"></div>\r\n        <div class=\"tooltips\">\r\n            <div>{{ tooltips.Year }}</div>\r\n            <div>{{ tooltips.举办时间 }}</div>\r\n            <div>{{ tooltips.举办国家 }} {{ tooltips.主办城市 }}</div>\r\n            <div>{{ tooltips.口号 || \"\" }}</div>\r\n            <transition>\r\n                <i :class=\"{ btn: true, 'el-icon-video-pause': timeline.paused, 'el-icon-video-play': !timeline.paused }\" @click=\"pauseAndPlay\" circle></i>\r\n            </transition>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    import anime from \"animejs\";\r\n    export default {\r\n        data() {\r\n            return {\r\n                points: [],\r\n                viewBox: [],\r\n                svg: null,\r\n                dataset: {},\r\n                timeline: {},\r\n                xLine: {},\r\n                yLine: {},\r\n                tooltips: {\r\n                    Year: 1896,\r\n                    届数: \"第01届\",\r\n                    赛事名称: \"1896年雅典奥运会\",\r\n                    举办国家: \"希腊\",\r\n                    主办城市: \"雅典\",\r\n                    举办时间: \"1896年04月06日-1896年04月15日\",\r\n                    口号: null,\r\n                    Season: \"Summer\",\r\n                    url: null,\r\n                    name: null,\r\n                    imgUrl: null,\r\n                    text: \"1896年\",\r\n                },\r\n            };\r\n        },\r\n        async mounted() {\r\n            this.dataset = await fetch(\"./奥运会赛事统一数据最终添加赛事介绍.json\", { cache: \"force-cache\" }).then((res) => res.json());\r\n            this.$refs.outer.innerHTML = await fetch(\"./worldMap.svg\").then((res) => res.text());\r\n            // 找到所有的点并排序\r\n            let allPoints = [...this.$refs.outer.querySelectorAll(\"[data-name$=summer]\"), ...this.$refs.outer.querySelectorAll(\"[data-name$=winter]\")].sort(\r\n                (a, b) => a.dataset.name.split(\"-\")[0] - b.dataset.name.split(\"-\")[0]\r\n            );\r\n            let points = allPoints.map((i) => {\r\n                let [year, season] = i.dataset.name.split(\"-\");\r\n                i.style.opacity = 0;\r\n                return { year, season };\r\n            });\r\n\r\n            this.xLine = this.$refs.outer.querySelector(\"line#x\");\r\n            this.yLine = this.$refs.outer.querySelector(\"line#y\");\r\n            let timeline = anime.timeline({\r\n                duration: 3000,\r\n            });\r\n            this.points = points;\r\n            this.timeline = timeline;\r\n            this.svg = this.$refs.outer.children[0];\r\n            this.viewBox = this.svg.getAttribute(\"viewBox\").split(\" \");\r\n\r\n            let that = this;\r\n            allPoints.forEach((targets) => {\r\n                timeline.add(\r\n                    {\r\n                        targets,\r\n                        scale: [3, 3, 0],\r\n                        opacity: 0.7,\r\n                        begin(anim) {\r\n                            let { x, y, width, height } = anim.animatables[0].target.getBBox();\r\n                            let [, , width1, height1] = that.viewBox;\r\n                            let xDis = x + width / 2;\r\n                            let yDis = y + height / 2;\r\n                            if (parseInt((xDis * 100) / width1)) {\r\n                                that.svg.style.transformOrigin = `${parseInt((xDis * 100) / width1)}% ${parseInt((yDis * 100) / height1)}% `;\r\n                                anime({ targets: that.yLine, y1: yDis, y2: yDis, duation: 500 });\r\n                                anime({ targets: that.xLine, x1: xDis, x2: xDis, duation: 500 });\r\n\r\n                                that.dataset.some((item) => {\r\n                                    if (item.Year == anim.animatables[0].target.dataset.name.split(\"-\")[0]) {\r\n                                        that.tooltips = item;\r\n                                        return true;\r\n                                    }\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        },\r\n                    },\r\n                    \"+=0\"\r\n                );\r\n            });\r\n        },\r\n        methods: {\r\n            pauseAndPlay() {\r\n                this.timeline[this.timeline.paused ? \"play\" : \"pause\"]();\r\n            },\r\n        },\r\n    };\r\n</script>\r\n<style scoped lang=\"less\">\r\n    .Box {\r\n        background-color: #00173e;\r\n        height: 100%;\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        overflow: hidden;\r\n        position: relative;\r\n        .tooltips {\r\n            position: absolute;\r\n            bottom: 10%;\r\n            left: 10px;\r\n            height: 200px;\r\n            width: 400px;\r\n            color: aliceblue;\r\n            background-color: #9797977a;\r\n            border-radius: 10px;\r\n            .btn {\r\n                box-shadow: 0 0 #fff;\r\n                font-size: 64px;\r\n                cursor: pointer;\r\n                font-weight: bolder;\r\n                background-image: url(\"../assets/SVG/round.svg\");\r\n                background-size: contain;\r\n                -webkit-background-clip: text;\r\n                -webkit-text-fill-color: transparent;\r\n            }\r\n        }\r\n    }\r\n</style>\r\n<style>\r\n    #WorldMap {\r\n        width: 90vw;\r\n    }\r\n    #WorldMap > svg {\r\n        transition: all 2s;\r\n        transform: scale(5);\r\n    }\r\n    #WorldMap line {\r\n        transition: all 2s;\r\n    }\r\n    svg * {\r\n        transform-box: fill-box !important;\r\n        transform-origin: center center;\r\n    }\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./世界地图.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./世界地图.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./世界地图.vue?vue&type=template&id=613552cb&scoped=true&\"\nimport script from \"./世界地图.vue?vue&type=script&lang=js&\"\nexport * from \"./世界地图.vue?vue&type=script&lang=js&\"\nimport style0 from \"./世界地图.vue?vue&type=style&index=0&id=613552cb&scoped=true&lang=less&\"\nimport style1 from \"./世界地图.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"613552cb\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}