{"version":3,"sources":["webpack:///./src/components/中国奖牌柱状图.vue?fff9","webpack:///./node_modules/echarts/lib/chart/bar/BaseBarSeries.js","webpack:///./node_modules/echarts/lib/chart/bar/BarSeries.js","webpack:///./node_modules/echarts/lib/util/shape/sausage.js","webpack:///./node_modules/echarts/lib/chart/bar/BarView.js","webpack:///./node_modules/echarts/lib/chart/bar/install.js","webpack:///src/components/中国奖牌柱状图.vue","webpack:///./src/components/中国奖牌柱状图.vue?a797","webpack:///./src/components/中国奖牌柱状图.vue","webpack:///./node_modules/core-js/modules/es.array.filter.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","ref","staticStyle","staticRenderFns","_super","BaseBarSeriesModel","_this","apply","arguments","type","prototype","getInitialData","option","ecModel","createListFromArray","getSource","useEncodeDefaulter","getMarkerPosition","value","coordSys","coordinateSystem","pt","dataToPoint","clampData","data","getData","offset","getLayout","size","offsetIndex","getBaseAxis","isHorizontal","NaN","defaultOption","zlevel","z","legendHoverLink","barMinHeight","barMinAngle","large","largeThreshold","progressive","progressiveChunkMode","Series","registerClass","BaseBarSeries","BarSeriesModel","createInvertedIndices","get","getProgressive","getProgressiveThreshold","progressiveThreshold","brushSelector","dataIndex","selectors","rect","getItemLayout","dependencies","clip","roundCap","showBackground","backgroundStyle","color","borderColor","borderWidth","borderType","borderRadius","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","opacity","select","itemStyle","realtimeSort","BarSeries","SausageShape","cx","cy","r0","r","startAngle","endAngle","Math","PI","clockwise","SausagePath","opts","call","getDefaultShape","buildPath","ctx","shape","x","y","max","dr","rCenter","unitStartX","cos","unitStartY","sin","unitEndX","unitEndY","lessThanCircle","moveTo","arc","closePath","Path","BAR_BORDER_WIDTH_QUERY","BAR_BORDER_RADIUS_QUERY","_eventPos","mathMax","mathMin","min","getClipArea","coord","coordSysClipArea","getArea","baseAxis","onBand","expandWidth","width","height","BarView","_isFirstFrame","seriesModel","api","payload","_model","_removeOnRenderedListener","_updateDrawMode","coordinateSystemType","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","_updateLargeClip","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","isHorizontalOrRadial","group","oldData","_data","dim","animationModel","isAnimationEnabled","realtimeSortCfg","shouldRealtimeSort","_enableRealtimeSort","needsClip","removeClipPath","drawBackground","backgroundModel","getModel","barBorderRadius","bgEls","oldBgEls","_backgroundEls","isInitSort","isChangeOrder","createBackground","bgLayout","bgEl","createBackgroundEl","useStyle","getItemStyle","setShape","diff","add","itemModel","getItemModel","layout","hasValue","isClipped","el","elementCreator","model","updateStyle","attr","updateRealtimeAnimation","setItemGraphicEl","ignore","update","newIndex","oldIndex","length","createBackgroundShape","getItemGraphicEl","remove","execute","bgGroup","_backgroundGroup","Group","removeAll","i","createLarge","_removeBackground","clipPath","setClipPath","count","_dispatchInitSort","orderMapping_1","idx","abs","_onRendered","_updateSortWithinSameData","getZr","on","_dataSort","orderMapping","info","each","mapDimension","ordinalNumber","dataIdx","mappedValue","push","sort","a","b","ordinalNumbers","item","_isOrderChangedWithinSameData","scale","ordinalDataDim","lastValue","Number","MAX_VALUE","tickNum","len","getOrdinalMeta","categories","rawIdx","rawIndexOf","getRawOrdinalNumber","MIN_VALUE","indexOfRawIndex","_isOrderDifferentInView","orderInfo","extent","getExtent","tickMax","sortInfo","dispatchAction","componentType","axisId","index","sortResult","otherAxis","animation","duration","dispose","off","eachItemGraphicEl","Chart","cartesian2d","coordSysBoundingRect","signWidth","signHeight","coordSysX2","coordSysY2","x2","y2","xClipped","yClipped","polar","signR","tmp","clipped","axisModel","isUpdate","Rect","z2","__dataIndex","name","rectShape","animateProperty","isRadial","ShapeClass","Sector","sector","sectorShape","animateTarget","realtimeSortOption","getOtherAxis","seriesAnimationModel","seriesTarget","axisTarget","axisAnimationModel","fixedLineWidth","getLineWidth","signX","signY","isZeroOnPolar","isPolar","style","getItemVisual","cursorStyle","getShallow","labelPositionOutside","labelStatesModels","labelFetcher","labelDataIndex","defaultText","inheritColor","fill","defaultOpacity","defaultOutsidePosition","label","getTextContent","getRawValue","emphasisModel","stroke","states","state","rawLayout","lineWidth","isNaN","LagePathShape","LargePath","points","startPoint","__startPoint","baseDimIdx","__baseDimIdx","lineTo","incremental","largeDataIndices","barWidth","backgroundStartPoint","silent","__largeDataIndices","__barWidth","setLargeBackgroundStyle","setLargeStyle","seriesIndex","largePathUpdateDataIndex","throttle","event","largePath","largePathFindDataIndex","offsetX","offsetY","valueDimIdx","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","ii","barBaseVal","barValueVal","globalStyle","getVisual","coordLayout","ElementClz","registers","registerChartView","registerSeriesModel","registerLayout","PRIORITY","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","registerVisual","seriesType","reset","setVisual","registerProcessor","PROCESSOR","STATISTIC","dataSample","registerAction","eachComponent","mainType","query","componentModel","axis","setCategorySortInfo","$","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","target","proto","forced","callbackfn","undefined"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,YAAY,SAAS,CAACF,EAAG,MAAM,CAACG,IAAI,QAAQD,YAAY,UAAUE,YAAY,CAAC,MAAQ,QAAQ,OAAS,cAC9MC,EAAkB,G,8RC8ClB,EAEJ,SAAUC,GAGR,SAASC,IACP,IAAIC,EAAmB,OAAXF,GAAmBA,EAAOG,MAAMZ,KAAMa,YAAcb,KAGhE,OADAW,EAAMG,KAAOJ,EAAmBI,KACzBH,EA4CT,OAlDA,eAAUD,EAAoBD,GAS9BC,EAAmBK,UAAUC,eAAiB,SAAUC,EAAQC,GAC9D,OAAO,OAAAC,EAAA,MAAoBnB,KAAKoB,YAAapB,KAAM,CACjDqB,oBAAoB,KAIxBX,EAAmBK,UAAUO,kBAAoB,SAAUC,GACzD,IAAIC,EAAWxB,KAAKyB,iBAEpB,GAAID,EAAU,CAEZ,IAAIE,EAAKF,EAASG,YAAYH,EAASI,UAAUL,IAC7CM,EAAO7B,KAAK8B,UACZC,EAASF,EAAKG,UAAU,UACxBC,EAAOJ,EAAKG,UAAU,QACtBE,EAAcV,EAASW,cAAcC,eAAiB,EAAI,EAE9D,OADAV,EAAGQ,IAAgBH,EAASE,EAAO,EAC5BP,EAGT,MAAO,CAACW,IAAKA,MAGf3B,EAAmBI,KAAO,sBAC1BJ,EAAmB4B,cAAgB,CACjCC,OAAQ,EACRC,EAAG,EACHf,iBAAkB,cAClBgB,iBAAiB,EAKjBC,aAAc,EACdC,YAAa,EAEbC,OAAO,EACPC,eAAgB,IAChBC,YAAa,IACbC,qBAAsB,OAEjBrC,EAnDT,CAoDEsC,EAAA,MAEFA,EAAA,KAAYC,cAAc,GACX,IAAAC,EAAA,E,YCxDX,EAEJ,SAAUzC,GAGR,SAAS0C,IACP,IAAIxC,EAAmB,OAAXF,GAAmBA,EAAOG,MAAMZ,KAAMa,YAAcb,KAGhE,OADAW,EAAMG,KAAOqC,EAAerC,KACrBH,EAkET,OAxEA,eAAUwC,EAAgB1C,GAS1B0C,EAAepC,UAAUC,eAAiB,WACxC,OAAO,OAAAG,EAAA,MAAoBnB,KAAKoB,YAAapB,KAAM,CACjDqB,oBAAoB,EACpB+B,wBAAyBpD,KAAKqD,IAAI,gBAAgB,IAAS,QAQ/DF,EAAepC,UAAUuC,eAAiB,WAExC,QAAOtD,KAAKqD,IAAI,UAAWrD,KAAKqD,IAAI,gBAOtCF,EAAepC,UAAUwC,wBAA0B,WAEjD,IAAIC,EAAuBxD,KAAKqD,IAAI,wBAChCR,EAAiB7C,KAAKqD,IAAI,kBAM9B,OAJIR,EAAiBW,IACnBA,EAAuBX,GAGlBW,GAGTL,EAAepC,UAAU0C,cAAgB,SAAUC,EAAW7B,EAAM8B,GAClE,OAAOA,EAAUC,KAAK/B,EAAKgC,cAAcH,KAG3CP,EAAerC,KAAO,aACtBqC,EAAeW,aAAe,CAAC,OAAQ,SACvCX,EAAeb,cAAgB,eAAqBY,EAAmBZ,cAAe,CAGpFyB,MAAM,EACNC,UAAU,EACVC,gBAAgB,EAChBC,gBAAiB,CACfC,MAAO,2BACPC,YAAa,KACbC,YAAa,EACbC,WAAY,QACZC,aAAc,EACdC,WAAY,EACZC,YAAa,KACbC,cAAe,EACfC,cAAe,EACfC,QAAS,GAEXC,OAAQ,CACNC,UAAW,CACTV,YAAa,YAGjBW,cAAc,IAET5B,EAzET,CA0EED,GAEa8B,EAAA,E,wHC7EXC,EAEJ,WACE,SAASA,IACPjF,KAAKkF,GAAK,EACVlF,KAAKmF,GAAK,EACVnF,KAAKoF,GAAK,EACVpF,KAAKqF,EAAI,EACTrF,KAAKsF,WAAa,EAClBtF,KAAKuF,SAAqB,EAAVC,KAAKC,GACrBzF,KAAK0F,WAAY,EAGnB,OAAOT,EAXT,GAcI,EAEJ,SAAUxE,GAGR,SAASkF,EAAYC,GACnB,IAAIjF,EAAQF,EAAOoF,KAAK7F,KAAM4F,IAAS5F,KAGvC,OADAW,EAAMG,KAAO,UACNH,EAwCT,OA9CA,eAAUgF,EAAalF,GASvBkF,EAAY5E,UAAU+E,gBAAkB,WACtC,OAAO,IAAIb,GAGbU,EAAY5E,UAAUgF,UAAY,SAAUC,EAAKC,GAC/C,IAAIC,EAAID,EAAMf,GACViB,EAAIF,EAAMd,GACVC,EAAKI,KAAKY,IAAIH,EAAMb,IAAM,EAAG,GAC7BC,EAAIG,KAAKY,IAAIH,EAAMZ,EAAG,GACtBgB,EAAgB,IAAVhB,EAAID,GACVkB,EAAUlB,EAAKiB,EACff,EAAaW,EAAMX,WACnBC,EAAWU,EAAMV,SACjBG,EAAYO,EAAMP,UAClBa,EAAaf,KAAKgB,IAAIlB,GACtBmB,EAAajB,KAAKkB,IAAIpB,GACtBqB,EAAWnB,KAAKgB,IAAIjB,GACpBqB,EAAWpB,KAAKkB,IAAInB,GACpBsB,EAAiBnB,EAAYH,EAAWD,EAAuB,EAAVE,KAAKC,GAASH,EAAaC,EAAqB,EAAVC,KAAKC,GAEhGoB,IACFb,EAAIc,OAAOP,EAAanB,EAAKc,EAAGO,EAAarB,EAAKe,GAClDH,EAAIe,IAAIR,EAAaD,EAAUJ,EAAGO,EAAaH,EAAUH,EAAGE,GAAKb,KAAKC,GAAKH,EAAYA,GAAaI,IAGtGM,EAAIe,IAAIb,EAAGC,EAAGd,EAAGC,EAAYC,GAAWG,GACxCM,EAAIc,OAAOH,EAAWtB,EAAIa,EAAGU,EAAWvB,EAAIc,GAC5CH,EAAIe,IAAIJ,EAAWL,EAAUJ,EAAGU,EAAWN,EAAUH,EAAGE,EAAId,EAAqB,EAAVC,KAAKC,GAAQF,EAAWC,KAAKC,IAAKC,GAE9F,IAAPN,IACFY,EAAIe,IAAIb,EAAGC,EAAGf,EAAIG,EAAUD,EAAYI,GACxCM,EAAIc,OAAOP,EAAanB,EAAKc,EAAGU,EAAWxB,EAAKe,IAGlDH,EAAIgB,aAGCrB,EA/CT,CAgDEsB,EAAA,MAEa,I,oCC3DXC,EAAyB,CAAC,YAAa,eACvCC,EAA0B,CAAC,YAAa,gBACxCC,EAAY,CAAC,EAAG,GAChBC,EAAU7B,KAAKY,IACfkB,EAAU9B,KAAK+B,IAEnB,SAASC,EAAYC,EAAO5F,GAC1B,IAAI6F,EAAmBD,EAAME,SAAWF,EAAME,UAE9C,GAAI,eAAuBF,EAAO,eAAgB,CAChD,IAAIG,EAAWH,EAAMtF,cAIrB,GAAsB,aAAlByF,EAAS9G,OAAwB8G,EAASC,OAAQ,CACpD,IAAIC,EAAcjG,EAAKG,UAAU,aAE7B4F,EAASxF,gBACXsF,EAAiBxB,GAAK4B,EACtBJ,EAAiBK,OAAuB,EAAdD,IAE1BJ,EAAiBvB,GAAK2B,EACtBJ,EAAiBM,QAAwB,EAAdF,IAKjC,OAAOJ,EAGT,IAAI,EAEJ,SAAUjH,GAGR,SAASwH,IACP,IAAItH,EAAQF,EAAOoF,KAAK7F,OAASA,KAIjC,OAFAW,EAAMG,KAAOmH,EAAQnH,KACrBH,EAAMuH,eAAgB,EACfvH,EAyaT,OAhbA,eAAUsH,EAASxH,GAUnBwH,EAAQlH,UAAUjB,OAAS,SAAUqI,EAAajH,EAASkH,EAAKC,GAC9DrI,KAAKsI,OAASH,EAEdnI,KAAKuI,0BAA0BH,GAE/BpI,KAAKwI,gBAAgBL,GAErB,IAAIM,EAAuBN,EAAY9E,IAAI,qBAEd,gBAAzBoF,GAAmE,UAAzBA,KAC5CzI,KAAK0I,aAAe1I,KAAK2I,aAAaR,EAAajH,EAASkH,GAAOpI,KAAK4I,cAAcT,EAAajH,EAASkH,EAAKC,KAMrHJ,EAAQlH,UAAU8H,yBAA2B,SAAUV,GACrDnI,KAAK8I,SAEL9I,KAAKwI,gBAAgBL,GAIrBnI,KAAK+I,iBAAiBZ,IAGxBF,EAAQlH,UAAUiI,kBAAoB,SAAUC,EAAQd,GAEtDnI,KAAKkJ,wBAAwBD,EAAQd,IAGvCF,EAAQlH,UAAUyH,gBAAkB,SAAUL,GAC5C,IAAIgB,EAAchB,EAAYiB,gBAAgBxG,MAErB,MAArB5C,KAAK0I,cAAwBS,IAAgBnJ,KAAK0I,eACpD1I,KAAK0I,aAAeS,EAEpBnJ,KAAK8I,WAITb,EAAQlH,UAAU6H,cAAgB,SAAUT,EAAajH,EAASkH,EAAKC,GACrE,IAKIgB,EALAC,EAAQtJ,KAAKsJ,MACbzH,EAAOsG,EAAYrG,UACnByH,EAAUvJ,KAAKwJ,MACf/B,EAAQU,EAAY1G,iBACpBmG,EAAWH,EAAMtF,cAGF,gBAAfsF,EAAM3G,KACRuI,EAAuBzB,EAASxF,eACR,UAAfqF,EAAM3G,OACfuI,EAAwC,UAAjBzB,EAAS6B,KAGlC,IAAIC,EAAiBvB,EAAYwB,qBAAuBxB,EAAc,KAClEyB,EAAkBC,EAAmB1B,EAAaV,GAElDmC,GACF5J,KAAK8J,oBAAoBF,EAAiB/H,EAAMuG,GAGlD,IAAI2B,EAAY5B,EAAY9E,IAAI,QAAQ,IAASuG,EAC7ClC,EAAmBF,EAAYC,EAAO5F,GAE1CyH,EAAMU,iBAGN,IAAIhG,EAAWmE,EAAY9E,IAAI,YAAY,GACvC4G,EAAiB9B,EAAY9E,IAAI,kBAAkB,GACnD6G,EAAkB/B,EAAYgC,SAAS,mBACvCC,EAAkBF,EAAgB7G,IAAI,iBAAmB,EACzDgH,EAAQ,GACRC,EAAWtK,KAAKuK,eAChBC,EAAanC,GAAWA,EAAQmC,WAChCC,EAAgBpC,GAA4B,oBAAjBA,EAAQvH,KAEvC,SAAS4J,EAAiBhH,GACxB,IAAIiH,EAAW3I,GAAUyF,EAAM3G,MAAMe,EAAM6B,GACvCkH,EAAOC,GAAmBpD,EAAO4B,EAAsBsB,GAQ3D,OAPAC,EAAKE,SAASZ,EAAgBa,gBAEX,gBAAftD,EAAM3G,MACR8J,EAAKI,SAAS,IAAKZ,GAGrBC,EAAM3G,GAAakH,EACZA,EAIT/I,EAAKoJ,KAAK1B,GAAS2B,KAAI,SAAUxH,GAC/B,IAAIyH,EAAYtJ,EAAKuJ,aAAa1H,GAC9B2H,EAASrJ,GAAUyF,EAAM3G,MAAMe,EAAM6B,EAAWyH,GAOpD,GALIlB,GACFS,EAAiBhH,GAId7B,EAAKyJ,SAAS5H,GAAnB,CAIA,IAAI6H,GAAY,EAEZxB,IAGFwB,EAAYxH,EAAK0D,EAAM3G,MAAM4G,EAAkB2D,IAGjD,IAAIG,EAAKC,EAAehE,EAAM3G,MAAMqH,EAAatG,EAAM6B,EAAW2H,EAAQhC,EAAsBK,EAAgB9B,EAAS8D,OAAO,EAAO1H,GACvI2H,GAAYH,EAAI3J,EAAM6B,EAAWyH,EAAWE,EAAQlD,EAAakB,EAAqC,UAAf5B,EAAM3G,MAEzF0J,EACFgB,EAAGI,KAAK,CACN3F,MAAOoF,IAEAzB,EACTiC,EAAwBjC,EAAiBF,EAAgB8B,EAAIH,EAAQ3H,EAAW2F,GAAsB,GAAO,GAE7G,uBAAUmC,EAAI,CACZvF,MAAOoF,GACNlD,EAAazE,GAGlB7B,EAAKiK,iBAAiBpI,EAAW8H,GACjClC,EAAM4B,IAAIM,GACVA,EAAGO,OAASR,MACXS,QAAO,SAAUC,EAAUC,GAC5B,IAAIf,EAAYtJ,EAAKuJ,aAAaa,GAC9BZ,EAASrJ,GAAUyF,EAAM3G,MAAMe,EAAMoK,EAAUd,GAEnD,GAAIlB,EAAgB,CAClB,IAAIW,OAAO,EAEa,IAApBN,EAAS6B,OACXvB,EAAOF,EAAiBwB,IAExBtB,EAAON,EAAS4B,GAChBtB,EAAKE,SAASZ,EAAgBa,gBAEX,gBAAftD,EAAM3G,MACR8J,EAAKI,SAAS,IAAKZ,GAGrBC,EAAM4B,GAAYrB,GAGpB,IAAID,EAAW3I,GAAUyF,EAAM3G,MAAMe,EAAMoK,GACvChG,EAAQmG,GAAsB/C,EAAsBsB,EAAUlD,GAClE,yBAAYmD,EAAM,CAChB3E,MAAOA,GACNyD,EAAgBuC,GAGrB,IAAIT,EAAKjC,EAAQ8C,iBAAiBH,GAElC,IAAKrK,EAAKyJ,SAASW,GAGjB,OAFA3C,EAAMgD,OAAOd,QACbA,EAAK,MAIP,IAAID,GAAY,EAEZxB,IACFwB,EAAYxH,EAAK0D,EAAM3G,MAAM4G,EAAkB2D,GAE3CE,GACFjC,EAAMgD,OAAOd,IAIZA,IACHA,EAAKC,EAAehE,EAAM3G,MAAMqH,EAAatG,EAAMoK,EAAUZ,EAAQhC,EAAsBK,EAAgB9B,EAAS8D,QAASF,EAAIxH,IAK9HyG,GACHkB,GAAYH,EAAI3J,EAAMoK,EAAUd,EAAWE,EAAQlD,EAAakB,EAAqC,UAAf5B,EAAM3G,MAG1F0J,EACFgB,EAAGI,KAAK,CACN3F,MAAOoF,IAEAzB,EACTiC,EAAwBjC,EAAiBF,EAAgB8B,EAAIH,EAAQY,EAAU5C,GAAsB,EAAMoB,GAE3G,yBAAYe,EAAI,CACdvF,MAAOoF,GACNlD,EAAa8D,EAAU,MAG5BpK,EAAKiK,iBAAiBG,EAAUT,GAChCA,EAAGO,OAASR,EACZjC,EAAM4B,IAAIM,MACTc,QAAO,SAAU5I,GAClB,IAAI8H,EAAKjC,EAAQ8C,iBAAiB3I,GAClC8H,GAAM,sCAAyBA,EAAIrD,EAAazE,MAC/C6I,UACH,IAAIC,EAAUxM,KAAKyM,mBAAqBzM,KAAKyM,iBAAmB,IAAIC,EAAA,MACpEF,EAAQG,YAER,IAAK,IAAIC,EAAI,EAAGA,EAAIvC,EAAM8B,SAAUS,EAClCJ,EAAQtB,IAAIb,EAAMuC,IAGpBtD,EAAM4B,IAAIsB,GACVxM,KAAKuK,eAAiBF,EACtBrK,KAAKwJ,MAAQ3H,GAGfoG,EAAQlH,UAAU4H,aAAe,SAAUR,EAAajH,EAASkH,GAC/DpI,KAAK8I,SAEL+D,GAAY1E,EAAanI,KAAKsJ,OAE9BtJ,KAAK+I,iBAAiBZ,IAGxBF,EAAQlH,UAAUmI,wBAA0B,SAAUD,EAAQd,GAC5DnI,KAAK8M,oBAELD,GAAY1E,EAAanI,KAAKsJ,OAAO,IAGvCrB,EAAQlH,UAAUgI,iBAAmB,SAAUZ,GAE7C,IAAI4E,EAAW5E,EAAY9E,IAAI,QAAQ,GAAQ,eAAe8E,EAAY1G,kBAAkB,EAAO0G,GAAe,KAE9G4E,EACF/M,KAAKsJ,MAAM0D,YAAYD,GAEvB/M,KAAKsJ,MAAMU,kBAIf/B,EAAQlH,UAAU+I,oBAAsB,SAAUF,EAAiB/H,EAAMuG,GACvE,IAAIzH,EAAQX,KAGZ,GAAK6B,EAAKoL,QAAV,CAIA,IAAIrF,EAAWgC,EAAgBhC,SAE/B,GAAI5H,KAAKkI,cACPlI,KAAKkN,kBAAkBrL,EAAM+H,EAAiBxB,GAE9CpI,KAAKkI,eAAgB,MAChB,CACL,IAAIiF,EAAiB,SAAUC,GAC7B,IAAI5B,EAAK3J,EAAKwK,iBAAiBe,GAE/B,GAAI5B,EAAI,CACN,IAAIvF,EAAQuF,EAAGvF,MAEf,OAAQ2B,EAASxF,eAEfoD,KAAK6H,IAAIpH,EAAM+B,QAAUxC,KAAK6H,IAAIpH,EAAM8B,SAAW,EAErD,OAAO,GAIX/H,KAAKsN,YAAc,WACjB3M,EAAM4M,0BAA0B1L,EAAMsL,EAAgBvF,EAAUQ,IAGlEA,EAAIoF,QAAQC,GAAG,WAAYzN,KAAKsN,gBAIpCrF,EAAQlH,UAAU2M,UAAY,SAAU7L,EAAM+F,EAAU+F,GACtD,IAAIC,EAAO,GAcX,OAbA/L,EAAKgM,KAAKhM,EAAKiM,aAAalG,EAAS6B,MAAM,SAAUsE,EAAeC,GAClE,IAAIC,EAAcN,EAAaK,GAC/BC,EAA6B,MAAfA,EAAsB5L,IAAM4L,EAC1CL,EAAKM,KAAK,CACRxK,UAAWsK,EACXC,YAAaA,EACbF,cAAeA,OAGnBH,EAAKO,MAAK,SAAUC,EAAGC,GAErB,OAAOA,EAAEJ,YAAcG,EAAEH,eAEpB,CACLK,eAAgB,eAAIV,GAAM,SAAUW,GAClC,OAAOA,EAAKR,mBAKlB9F,EAAQlH,UAAUyN,8BAAgC,SAAU3M,EAAM8L,EAAc/F,GAK9E,IAJA,IAAI6G,EAAQ7G,EAAS6G,MACjBC,EAAiB7M,EAAKiM,aAAalG,EAAS6B,KAC5CkF,EAAYC,OAAOC,UAEdC,EAAU,EAAGC,EAAMN,EAAMO,iBAAiBC,WAAW9C,OAAQ2C,EAAUC,IAAOD,EAAS,CAC9F,IAAII,EAASrN,EAAKsN,WAAWT,EAAgBD,EAAMW,oBAAoBN,IACnEvN,EAAQ2N,EAAS,EACnBN,OAAOS,UACP1B,EAAa9L,EAAKyN,gBAAgBJ,IAEpC,GAAI3N,EAAQoN,EACV,OAAO,EAGTA,EAAYpN,EAGd,OAAO,GAST0G,EAAQlH,UAAUwO,wBAA0B,SAAUC,EAAW5H,GAM/D,IALA,IAAI6G,EAAQ7G,EAAS6G,MACjBgB,EAAShB,EAAMiB,YACfZ,EAAUtJ,KAAKY,IAAI,EAAGqJ,EAAO,IAC7BE,EAAUnK,KAAK+B,IAAIkI,EAAO,GAAIhB,EAAMO,iBAAiBC,WAAW9C,OAAS,GAEtE2C,GAAWa,IAAWb,EAC3B,GAAIU,EAAUlB,eAAeQ,KAAaL,EAAMW,oBAAoBN,GAClE,OAAO,GAKb7G,EAAQlH,UAAUwM,0BAA4B,SAAU1L,EAAM8L,EAAc/F,EAAUQ,GACpF,GAAKpI,KAAKwO,8BAA8B3M,EAAM8L,EAAc/F,GAA5D,CAIA,IAAIgI,EAAW5P,KAAK0N,UAAU7L,EAAM+F,EAAU+F,GAE1C3N,KAAKuP,wBAAwBK,EAAUhI,KACzC5H,KAAKuI,0BAA0BH,GAE/BA,EAAIyH,eAAe,CACjB/O,KAAM,kBACNgP,cAAelI,EAAS6B,IAAM,OAC9BsG,OAAQnI,EAASoI,MACjBJ,SAAUA,OAKhB3H,EAAQlH,UAAUmM,kBAAoB,SAAUrL,EAAM+H,EAAiBxB,GACrE,IAAIR,EAAWgC,EAAgBhC,SAE3BqI,EAAajQ,KAAK0N,UAAU7L,EAAM+F,GAAU,SAAUoG,GACxD,OAAOnM,EAAKwB,IAAIxB,EAAKiM,aAAalE,EAAgBsG,UAAUzG,KAAMuE,MAGpE5F,EAAIyH,eAAe,CACjB/O,KAAM,kBACNgP,cAAelI,EAAS6B,IAAM,OAC9Be,YAAY,EACZuF,OAAQnI,EAASoI,MACjBJ,SAAUK,EACVE,UAAW,CAGTC,SAAU,MAKhBnI,EAAQlH,UAAUuL,OAAS,SAAUpL,EAASkH,GAC5CpI,KAAK8I,OAAO9I,KAAKsI,QAEjBtI,KAAKuI,0BAA0BH,IAGjCH,EAAQlH,UAAUsP,QAAU,SAAUnP,EAASkH,GAC7CpI,KAAKuI,0BAA0BH,IAGjCH,EAAQlH,UAAUwH,0BAA4B,SAAUH,GAClDpI,KAAKsN,cACPlF,EAAIoF,QAAQ8C,IAAI,WAAYtQ,KAAKsN,aACjCtN,KAAKsN,YAAc,OAIvBrF,EAAQlH,UAAU+H,OAAS,SAAU4C,GACnC,IAAIpC,EAAQtJ,KAAKsJ,MACbzH,EAAO7B,KAAKwJ,MAEZkC,GAASA,EAAM/B,sBAAwB9H,IAAS7B,KAAK0I,cACvD1I,KAAK8M,oBAEL9M,KAAKuK,eAAiB,GACtB1I,EAAK0O,mBAAkB,SAAU/E,GAC/B,sCAAyBA,EAAIE,EAAO,eAAUF,GAAI9H,eAGpD4F,EAAMqD,YAGR3M,KAAKwJ,MAAQ,KACbxJ,KAAKkI,eAAgB,GAGvBD,EAAQlH,UAAU+L,kBAAoB,WACpC9M,KAAKsJ,MAAMgD,OAAOtM,KAAKyM,kBACvBzM,KAAKyM,iBAAmB,MAG1BxE,EAAQnH,KAAO,MACRmH,EAjbT,CAkbEuI,EAAA,MAEEzM,EAAO,CACT0M,YAAa,SAAUC,EAAsBrF,GAC3C,IAAIsF,EAAYtF,EAAOtD,MAAQ,GAAK,EAAI,EACpC6I,EAAavF,EAAOrD,OAAS,GAAK,EAAI,EAEtC2I,EAAY,IACdtF,EAAOnF,GAAKmF,EAAOtD,MACnBsD,EAAOtD,OAASsD,EAAOtD,OAGrB6I,EAAa,IACfvF,EAAOlF,GAAKkF,EAAOrD,OACnBqD,EAAOrD,QAAUqD,EAAOrD,QAG1B,IAAI6I,EAAaH,EAAqBxK,EAAIwK,EAAqB3I,MAC3D+I,EAAaJ,EAAqBvK,EAAIuK,EAAqB1I,OAC3D9B,EAAImB,EAAQgE,EAAOnF,EAAGwK,EAAqBxK,GAC3C6K,EAAKzJ,EAAQ+D,EAAOnF,EAAImF,EAAOtD,MAAO8I,GACtC1K,EAAIkB,EAAQgE,EAAOlF,EAAGuK,EAAqBvK,GAC3C6K,EAAK1J,EAAQ+D,EAAOlF,EAAIkF,EAAOrD,OAAQ8I,GACvCG,EAAWF,EAAK7K,EAChBgL,EAAWF,EAAK7K,EAoBpB,OAfAkF,EAAOnF,EAAI+K,GAAY/K,EAAI2K,EAAaE,EAAK7K,EAC7CmF,EAAOlF,EAAI+K,GAAY/K,EAAI2K,EAAaE,EAAK7K,EAC7CkF,EAAOtD,MAAQkJ,EAAW,EAAIF,EAAK7K,EACnCmF,EAAOrD,OAASkJ,EAAW,EAAIF,EAAK7K,EAEhCwK,EAAY,IACdtF,EAAOnF,GAAKmF,EAAOtD,MACnBsD,EAAOtD,OAASsD,EAAOtD,OAGrB6I,EAAa,IACfvF,EAAOlF,GAAKkF,EAAOrD,OACnBqD,EAAOrD,QAAUqD,EAAOrD,QAGnBiJ,GAAYC,GAErBC,MAAO,SAAUzJ,EAAkB2D,GACjC,IAAI+F,EAAQ/F,EAAOjG,IAAMiG,EAAOhG,EAAI,GAAK,EAEzC,GAAI+L,EAAQ,EAAG,CACb,IAAIC,EAAMhG,EAAOhG,EACjBgG,EAAOhG,EAAIgG,EAAOjG,GAClBiG,EAAOjG,GAAKiM,EAGd,IAAIhM,EAAIiC,EAAQ+D,EAAOhG,EAAGqC,EAAiBrC,GACvCD,EAAKiC,EAAQgE,EAAOjG,GAAIsC,EAAiBtC,IAC7CiG,EAAOhG,EAAIA,EACXgG,EAAOjG,GAAKA,EACZ,IAAIkM,EAAUjM,EAAID,EAAK,EAEvB,GAAIgM,EAAQ,EAAG,CACTC,EAAMhG,EAAOhG,EACjBgG,EAAOhG,EAAIgG,EAAOjG,GAClBiG,EAAOjG,GAAKiM,EAGd,OAAOC,IAGP7F,EAAiB,CACnBgF,YAAa,SAAUtI,EAAatG,EAAMoK,EAAUZ,EAAQjJ,EAAcsH,EAAgB6H,EAAWC,EAAUxN,GAC7G,IAAIJ,EAAO,IAAI6N,EAAA,KAAK,CAClBxL,MAAO,eAAO,GAAIoF,GAClBqG,GAAI,IAKN,GAHA9N,EAAK+N,YAAc1F,EACnBrI,EAAKgO,KAAO,OAERlI,EAAgB,CAClB,IAAImI,EAAYjO,EAAKqC,MACjB6L,EAAkB1P,EAAe,SAAW,QAChDyP,EAAUC,GAAmB,EAG/B,OAAOlO,GAETuN,MAAO,SAAUhJ,EAAatG,EAAMoK,EAAUZ,EAAQ0G,EAAUrI,EAAgB6H,EAAWC,EAAUxN,GAKnG,IAAI0B,EAAY2F,EAAO/F,WAAa+F,EAAO9F,SACvCyM,GAAcD,GAAY/N,EAAW,EAAUiO,EAAA,KAC/CC,EAAS,IAAIF,EAAW,CAC1B/L,MAAO,eAAS,CACdP,UAAWA,GACV2F,GACHqG,GAAI,IAIN,GAFAQ,EAAON,KAAO,OAEVlI,EAAgB,CAClB,IAAIyI,EAAcD,EAAOjM,MACrB6L,EAAkBC,EAAW,IAAM,WACnCK,EAAgB,GACpBD,EAAYL,GAAmBC,EAAW,EAAI1G,EAAO/F,WACrD8M,EAAcN,GAAmBzG,EAAOyG,IACvCN,EAAW,iBAAc,gBAAWU,EAAQ,CAC3CjM,MAAOmM,GAEN1I,GAGL,OAAOwI,IAIX,SAASrI,EAAmB1B,EAAa3G,GACvC,IAAI6Q,EAAqBlK,EAAY9E,IAAI,gBAAgB,GACrDuE,EAAWpG,EAASW,cAcxB,GAAIkQ,GAAwC,aAAlBzK,EAAS9G,MAAyC,gBAAlBU,EAASV,KACjE,MAAO,CACL8G,SAAUA,EACVsI,UAAW1O,EAAS8Q,aAAa1K,IAKvC,SAASiE,EAAwBjC,EAAiB2I,EAAsB/G,EAAIH,EAAQY,EAAU7J,EAAcoP,EAAU/G,GACpH,IAAI+H,EACAC,EAEArQ,GACFqQ,EAAa,CACXvM,EAAGmF,EAAOnF,EACV6B,MAAOsD,EAAOtD,OAEhByK,EAAe,CACbrM,EAAGkF,EAAOlF,EACV6B,OAAQqD,EAAOrD,UAGjByK,EAAa,CACXtM,EAAGkF,EAAOlF,EACV6B,OAAQqD,EAAOrD,QAEjBwK,EAAe,CACbtM,EAAGmF,EAAOnF,EACV6B,MAAOsD,EAAOtD,QAIb0C,IAGF+G,EAAW,iBAAc,gBAAWhG,EAAI,CACvCvF,MAAOuM,GACND,EAAsBtG,EAAU,MAGrC,IAAIyG,EAAqBH,EAAuB3I,EAAgBhC,SAAS8D,MAAQ,MAChF8F,EAAW,iBAAc,gBAAWhG,EAAI,CACvCvF,MAAOwM,GACNC,EAAoBzG,GAGzB,IAAIjK,GAAY,CAGdyO,YAAa,SAAU5O,EAAM6B,EAAWyH,GACtC,IAAIE,EAASxJ,EAAKgC,cAAcH,GAC5BiP,EAAiBxH,EAAYyH,GAAazH,EAAWE,GAAU,EAE/DwH,EAAQxH,EAAOtD,MAAQ,EAAI,GAAK,EAChC+K,EAAQzH,EAAOrD,OAAS,EAAI,GAAK,EACrC,MAAO,CACL9B,EAAGmF,EAAOnF,EAAI2M,EAAQF,EAAiB,EACvCxM,EAAGkF,EAAOlF,EAAI2M,EAAQH,EAAiB,EACvC5K,MAAOsD,EAAOtD,MAAQ8K,EAAQF,EAC9B3K,OAAQqD,EAAOrD,OAAS8K,EAAQH,IAGpCxB,MAAO,SAAUtP,EAAM6B,EAAWyH,GAChC,IAAIE,EAASxJ,EAAKgC,cAAcH,GAChC,MAAO,CACLwB,GAAImG,EAAOnG,GACXC,GAAIkG,EAAOlG,GACXC,GAAIiG,EAAOjG,GACXC,EAAGgG,EAAOhG,EACVC,WAAY+F,EAAO/F,WACnBC,SAAU8F,EAAO9F,YAKvB,SAASwN,GAAc1H,GACrB,OAA4B,MAArBA,EAAO/F,YAAyC,MAAnB+F,EAAO9F,UAAoB8F,EAAO/F,aAAe+F,EAAO9F,SAG9F,SAASoG,GAAYH,EAAI3J,EAAM6B,EAAWyH,EAAWE,EAAQlD,EAAa/F,EAAc4Q,GACtF,IAAIC,EAAQpR,EAAKqR,cAAcxP,EAAW,SAErCsP,GACHxH,EAAGR,SAAS,IAAKG,EAAU9H,IAAI8D,IAA4B,GAG7DqE,EAAGV,SAASmI,GACZ,IAAIE,EAAchI,EAAUiI,WAAW,UAGvC,GAFAD,GAAe3H,EAAGI,KAAK,SAAUuH,IAE5BH,EAAS,CACZ,IAAIK,EAAuBjR,EAAeiJ,EAAOrD,OAAS,EAAI,SAAW,MAAQqD,EAAOtD,MAAQ,EAAI,OAAS,QACzGuL,EAAoB,eAAqBnI,GAC7C,eAAcK,EAAI8H,EAAmB,CACnCC,aAAcpL,EACdqL,eAAgB9P,EAChB+P,YAAa,eAAgBtL,EAAYrG,UAAW4B,GACpDgQ,aAAcT,EAAMU,KACpBC,eAAgBX,EAAMrO,QACtBiP,uBAAwBR,IAE1B,IAAIS,EAAQtI,EAAGuI,iBACf,eAAuBD,EAAOR,EAAmBnL,EAAY6L,YAAYtQ,IAAY,SAAUnC,GAC7F,OAAO,eAA4BM,EAAMN,MAI7C,IAAI0S,EAAgB9I,EAAUhB,SAAS,CAAC,aACxC,eAAoBqB,EAAIyI,EAAc5Q,IAAI,SAAU4Q,EAAc5Q,IAAI,cACtE,eAAyBmI,EAAIL,GAEzB4H,GAAc1H,KAChBG,EAAGyH,MAAMU,KAAO,OAChBnI,EAAGyH,MAAMiB,OAAS,OAClB,eAAK1I,EAAG2I,QAAQ,SAAUC,GACpBA,EAAMnB,QACRmB,EAAMnB,MAAMU,KAAOS,EAAMnB,MAAMiB,OAAS,YAOhD,SAAStB,GAAazH,EAAWkJ,GAC/B,IAAIC,EAAYnJ,EAAU9H,IAAI6D,IAA2B,EAErDa,EAAQwM,MAAMF,EAAUtM,OAAS6G,OAAOC,UAAYrJ,KAAK6H,IAAIgH,EAAUtM,OACvEC,EAASuM,MAAMF,EAAUrM,QAAU4G,OAAOC,UAAYrJ,KAAK6H,IAAIgH,EAAUrM,QAC7E,OAAOxC,KAAK+B,IAAI+M,EAAWvM,EAAOC,GAGpC,IAAIwM,GAEJ,WACE,SAASA,KAET,OAAOA,EAHT,GAMI,GAEJ,SAAU/T,GAGR,SAASgU,EAAU7O,GACjB,IAAIjF,EAAQF,EAAOoF,KAAK7F,KAAM4F,IAAS5F,KAGvC,OADAW,EAAMG,KAAO,WACNH,EAuBT,OA7BA,eAAU8T,EAAWhU,GAWrBgU,EAAU1T,UAAU+E,gBAAkB,WACpC,OAAO,IAAI0O,IAGbC,EAAU1T,UAAUgF,UAAY,SAAUC,EAAKC,GAO7C,IAJA,IAAIyO,EAASzO,EAAMyO,OACfC,EAAa3U,KAAK4U,aAClBC,EAAa7U,KAAK8U,aAEblI,EAAI,EAAGA,EAAI8H,EAAOvI,OAAQS,GAAK,EACtC+H,EAAWE,GAAcH,EAAO9H,EAAIiI,GACpC7O,EAAIc,OAAO6N,EAAW,GAAIA,EAAW,IACrC3O,EAAI+O,OAAOL,EAAO9H,GAAI8H,EAAO9H,EAAI,KAI9B6H,EA9BT,CA+BExN,EAAA,MAEF,SAAS4F,GAAY1E,EAAamB,EAAO0L,GAEvC,IAAInT,EAAOsG,EAAYrG,UACnB6S,EAAa,GACbE,EAAahT,EAAKG,UAAU,uBAAyB,EAAI,EAC7D2S,EAAW,EAAIE,GAAchT,EAAKG,UAAU,kBAC5C,IAAIiT,EAAmBpT,EAAKG,UAAU,oBAClCkT,EAAWrT,EAAKG,UAAU,YAC1BkI,EAAkB/B,EAAYgC,SAAS,mBACvCF,EAAiB9B,EAAY9E,IAAI,kBAAkB,GAEvD,GAAI4G,EAAgB,CAClB,IAAIyK,EAAS7S,EAAKG,UAAU,yBACxBmT,EAAuB,GAC3BA,EAAqB,EAAIN,GAAchT,EAAKG,UAAU,mBACtD,IAAI4I,EAAO,IAAI,GAAU,CACvB3E,MAAO,CACLyO,OAAQA,GAEVM,cAAeA,EACfI,QAAQ,EACR1D,GAAI,IAEN9G,EAAKgK,aAAeO,EACpBvK,EAAKkK,aAAeD,EACpBjK,EAAKyK,mBAAqBJ,EAC1BrK,EAAK0K,WAAaJ,EAClBK,GAAwB3K,EAAMV,EAAiBrI,GAC/CyH,EAAM4B,IAAIN,GAGZ,IAAIY,EAAK,IAAI,GAAU,CACrBvF,MAAO,CACLyO,OAAQ7S,EAAKG,UAAU,gBAEzBgT,cAAeA,IAEjBxJ,EAAGoJ,aAAeD,EAClBnJ,EAAGsJ,aAAeD,EAClBrJ,EAAG6J,mBAAqBJ,EACxBzJ,EAAG8J,WAAaJ,EAChB5L,EAAM4B,IAAIM,GACVgK,GAAchK,EAAIrD,EAAatG,GAE/B,eAAU2J,GAAIiK,YAActN,EAAYsN,YAEnCtN,EAAY9E,IAAI,YACnBmI,EAAGiC,GAAG,YAAaiI,IACnBlK,EAAGiC,GAAG,YAAaiI,KAKvB,IAAIA,GAA2B,OAAAC,EAAA,OAAS,SAAUC,GAChD,IAAIC,EAAY7V,KACZ0D,EAAYoS,GAAuBD,EAAWD,EAAMG,QAASH,EAAMI,SACvE,eAAUH,GAAWnS,UAAYA,GAAa,EAAIA,EAAY,OAC7D,IAAI,GAEP,SAASoS,GAAuBD,EAAW3P,EAAGC,GAC5C,IAAI0O,EAAagB,EAAUf,aACvBmB,EAAc,EAAIpB,EAClBH,EAASmB,EAAU5P,MAAMyO,OACzBO,EAAmBY,EAAUR,mBAC7Ba,EAAe1Q,KAAK6H,IAAIwI,EAAUP,WAAa,GAC/Ca,EAAgBN,EAAUjB,aAAaqB,GAC3C7O,EAAU,GAAKlB,EACfkB,EAAU,GAAKjB,EAMf,IALA,IAAIiQ,EAAiBhP,EAAUyN,GAC3BwB,EAAkBjP,EAAU,EAAIyN,GAChCyB,EAAiBF,EAAiBF,EAClCK,EAAiBH,EAAiBF,EAE7BtJ,EAAI,EAAGmC,EAAM2F,EAAOvI,OAAS,EAAGS,EAAImC,EAAKnC,IAAK,CACrD,IAAI4J,EAAS,EAAJ5J,EACL6J,EAAa/B,EAAO8B,EAAK3B,GACzB6B,EAAchC,EAAO8B,EAAKP,GAE9B,GAAIQ,GAAcH,GAAkBG,GAAcF,IAAmBJ,GAAiBO,EAAcL,GAAmBF,GAAiBE,GAAmBK,EAAcL,GAAmBK,GAAeL,GAAmBF,GAC5N,OAAOlB,EAAiBrI,GAI5B,OAAQ,EAGV,SAAS4I,GAAchK,EAAIrD,EAAatG,GACtC,IAAI8U,EAAc9U,EAAK+U,UAAU,SACjCpL,EAAGV,SAAS,eAAO,GAAI6L,IAEvBnL,EAAGyH,MAAMU,KAAO,KAChBnI,EAAGyH,MAAMiB,OAASyC,EAAYhD,KAC9BnI,EAAGyH,MAAMqB,UAAYzS,EAAKG,UAAU,YAGtC,SAASuT,GAAwB/J,EAAItB,EAAiBrI,GACpD,IAAIuC,EAAc8F,EAAgB7G,IAAI,gBAAkB6G,EAAgB7G,IAAI,SACxEyB,EAAYoF,EAAgBa,eAChCS,EAAGV,SAAShG,GACZ0G,EAAGyH,MAAMU,KAAO,KAChBnI,EAAGyH,MAAMiB,OAAS9P,EAClBoH,EAAGyH,MAAMqB,UAAYzS,EAAKG,UAAU,YAGtC,SAASoK,GAAsB/C,EAAsBgC,EAAQ5D,GAC3D,GAAI,eAAuBA,EAAO,eAAgB,CAChD,IAAIoK,EAAYxG,EACZwL,EAAcpP,EAAME,UACxB,MAAO,CACLzB,EAAGmD,EAAuBwI,EAAU3L,EAAI2Q,EAAY3Q,EACpDC,EAAGkD,EAAuBwN,EAAY1Q,EAAI0L,EAAU1L,EACpD4B,MAAOsB,EAAuBwI,EAAU9J,MAAQ8O,EAAY9O,MAC5DC,OAAQqB,EAAuBwN,EAAY7O,OAAS6J,EAAU7J,QAG5D6O,EAAcpP,EAAME,UAAxB,IACIwK,EAAc9G,EAClB,MAAO,CACLnG,GAAI2R,EAAY3R,GAChBC,GAAI0R,EAAY1R,GAChBC,GAAIiE,EAAuBwN,EAAYzR,GAAK+M,EAAY/M,GACxDC,EAAGgE,EAAuBwN,EAAYxR,EAAI8M,EAAY9M,EACtDC,WAAY+D,EAAuB8I,EAAY7M,WAAa,EAC5DC,SAAU8D,EAAuB8I,EAAY5M,SAAqB,EAAVC,KAAKC,IAKnE,SAASoF,GAAmBpD,EAAO4B,EAAsBgC,GACvD,IAAIyL,EAA4B,UAAfrP,EAAM3G,KAAmBmR,EAAA,KAASR,EAAA,KACnD,OAAO,IAAIqF,EAAW,CACpB7Q,MAAOmG,GAAsB/C,EAAsBgC,EAAQ5D,GAC3D2N,QAAQ,EACR1D,GAAI,IAIO,SCz5BR,SAAS,GAAQqF,GACtBA,EAAUC,kBAAkB,IAC5BD,EAAUE,oBAAoBjS,GAC9B+R,EAAUG,eAAeH,EAAUI,SAASC,OAAOC,OAAQ,OAAa,OAAQ,QAGhFN,EAAUG,eAAeH,EAAUI,SAASC,OAAOE,mBAAoB,QACvEP,EAAUQ,eAAe,CACvBC,WAAY,MACZC,MAAO,SAAUtP,GAEfA,EAAYrG,UAAU4V,UAAU,eAAgB,gBAIpDX,EAAUY,kBAAkBZ,EAAUI,SAASS,UAAUC,UAAW,OAAAC,EAAA,MAAW,QAW/Ef,EAAUgB,eAAe,CACvBjX,KAAM,kBACN8U,MAAO,kBACP5J,OAAQ,WACP,SAAU3D,EAASnH,GACpB,IAAI4O,EAAgBzH,EAAQyH,eAAiB,SAC7C5O,EAAQ8W,cAAc,CACpBC,SAAUnI,EACVoI,MAAO7P,IACN,SAAU8P,GACP9P,EAAQuH,UACVuI,EAAeC,KAAKC,oBAAoBhQ,EAAQuH,gB,iBC1ExD,IACE,MAAF,qBACE,QAFF,WAEI,IAAJ,OAAI,OAAJ,qDAAM,IAAN,EAAM,OAAN,qCAAQ,MAAR,sCACA,sEAEA,gCAHA,SAIA,gEAJA,OAIA,EAJA,OAMA,mBACA,iFACA,4DACgB,MAAO,CACL,KAAlB,EACkB,KAAlB,MACkB,KAAlB,EACA,oBAAoB,OAApB,cACA,oBAAoB,OAApB,iBACA,iBAAoB,OAApB,eAGA,sBACA,8BACA,uBApBA,+CAsBE,KAxBF,WAyBI,MAAJ,CACM,QAAN,GACM,OAAN,CACQ,MAAR,4BACQ,MAAR,CACU,KAAV,SAEQ,QAAR,CACU,QAAV,QAEQ,OAAR,GACQ,KAAR,CACU,KAAV,KACU,MAAV,KACU,OAAV,KACU,cAAV,GAEQ,MAAR,CACU,KAAV,YAEQ,MAAR,CACU,KAAV,SAEQ,OAAR,OC3DiV,M,aCO7U,GAAY,gBACd,GACA9P,EACAU,GACA,EACA,KACA,WACA,MAIa,gB,6CCjBf,IAAI8X,EAAI,EAAQ,QACZC,EAAU,EAAQ,QAAgCC,OAClDC,EAA+B,EAAQ,QAEvCC,EAAsBD,EAA6B,UAKvDH,EAAE,CAAEK,OAAQ,QAASC,OAAO,EAAMC,QAASH,GAAuB,CAChEF,OAAQ,SAAgBM,GACtB,OAAOP,EAAQvY,KAAM8Y,EAAYjY,UAAUsL,OAAS,EAAItL,UAAU,QAAKkY","file":"js/chunk-0fff605f.1f0efb73.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"chart\"},[_c('div',{ref:\"chart\",staticClass:\"echarts\",staticStyle:{\"width\":\"800px\",\"height\":\"500px\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series';\nimport createListFromArray from '../helper/createListFromArray';\n\nvar BaseBarSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(BaseBarSeriesModel, _super);\n\n  function BaseBarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BaseBarSeriesModel.type;\n    return _this;\n  }\n\n  BaseBarSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      useEncodeDefaulter: true\n    });\n  };\n\n  BaseBarSeriesModel.prototype.getMarkerPosition = function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  };\n\n  BaseBarSeriesModel.type = 'series.__base_bar__';\n  BaseBarSeriesModel.defaultOption = {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    barMinHeight: 0,\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 3e3,\n    progressiveChunkMode: 'mod'\n  };\n  return BaseBarSeriesModel;\n}(SeriesModel);\n\nSeriesModel.registerClass(BaseBarSeriesModel);\nexport default BaseBarSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseBarSeriesModel from './BaseBarSeries';\nimport createListFromArray from '../helper/createListFromArray';\nimport { inheritDefaultOption } from '../../util/component';\n\nvar BarSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(BarSeriesModel, _super);\n\n  function BarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BarSeriesModel.type;\n    return _this;\n  }\n\n  BarSeriesModel.prototype.getInitialData = function () {\n    return createListFromArray(this.getSource(), this, {\n      useEncodeDefaulter: true,\n      createInvertedIndices: !!this.get('realtimeSort', true) || null\n    });\n  };\n  /**\n   * @override\n   */\n\n\n  BarSeriesModel.prototype.getProgressive = function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  };\n  /**\n   * @override\n   */\n\n\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  };\n\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.rect(data.getItemLayout(dataIndex));\n  };\n\n  BarSeriesModel.type = 'series.bar';\n  BarSeriesModel.dependencies = ['grid', 'polar'];\n  BarSeriesModel.defaultOption = inheritDefaultOption(BaseBarSeriesModel.defaultOption, {\n    // If clipped\n    // Only available on cartesian2d\n    clip: true,\n    roundCap: false,\n    showBackground: false,\n    backgroundStyle: {\n      color: 'rgba(180, 180, 180, 0.2)',\n      borderColor: null,\n      borderWidth: 0,\n      borderType: 'solid',\n      borderRadius: 0,\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    realtimeSort: false\n  });\n  return BarSeriesModel;\n}(BaseBarSeriesModel);\n\nexport default BarSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { Path } from '../graphic';\n/**\n * Sausage: similar to sector, but have half circle on both sides\n */\n\nvar SausageShape =\n/** @class */\nfunction () {\n  function SausageShape() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r0 = 0;\n    this.r = 0;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.clockwise = true;\n  }\n\n  return SausageShape;\n}();\n\nvar SausagePath =\n/** @class */\nfunction (_super) {\n  __extends(SausagePath, _super);\n\n  function SausagePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'sausage';\n    return _this;\n  }\n\n  SausagePath.prototype.getDefaultShape = function () {\n    return new SausageShape();\n  };\n\n  SausagePath.prototype.buildPath = function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var dr = (r - r0) * 0.5;\n    var rCenter = r0 + dr;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitStartX = Math.cos(startAngle);\n    var unitStartY = Math.sin(startAngle);\n    var unitEndX = Math.cos(endAngle);\n    var unitEndY = Math.sin(endAngle);\n    var lessThanCircle = clockwise ? endAngle - startAngle < Math.PI * 2 : startAngle - endAngle < Math.PI * 2;\n\n    if (lessThanCircle) {\n      ctx.moveTo(unitStartX * r0 + x, unitStartY * r0 + y);\n      ctx.arc(unitStartX * rCenter + x, unitStartY * rCenter + y, dr, -Math.PI + startAngle, startAngle, !clockwise);\n    }\n\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.moveTo(unitEndX * r + x, unitEndY * r + y);\n    ctx.arc(unitEndX * rCenter + x, unitEndY * rCenter + y, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n      ctx.moveTo(unitStartX * r0 + x, unitEndY * r0 + y);\n    }\n\n    ctx.closePath();\n  };\n\n  return SausagePath;\n}(Path);\n\nexport default SausagePath;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path';\nimport Group from 'zrender/lib/graphic/Group';\nimport { extend, defaults, each, map } from 'zrender/lib/core/util';\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut } from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport { enableHoverEmphasis, setStatesStylesFromModel } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation } from '../../label/labelStyle';\nimport { throttle } from '../../util/throttle';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\nimport Sausage from '../../util/shape/sausage';\nimport ChartView from '../../view/Chart';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nimport { warn } from '../../util/log';\nvar BAR_BORDER_WIDTH_QUERY = ['itemStyle', 'borderWidth'];\nvar BAR_BORDER_RADIUS_QUERY = ['itemStyle', 'borderRadius'];\nvar _eventPos = [0, 0];\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView =\n/** @class */\nfunction (_super) {\n  __extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n\n    this._removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel); // incremental also need to clip, otherwise might be overlow.\n    // But must not set clip in each frame, otherwise all of the children will be marked redraw.\n\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var realtimeSortCfg = shouldRealtimeSort(seriesModel, coord);\n\n    if (realtimeSortCfg) {\n      this._enableRealtimeSort(realtimeSortCfg, data, api);\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSortCfg;\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex)) {\n        group.remove(el);\n        el = null;\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      } // Not change anything if only order changed.\n      // Especially not change label.\n\n\n      if (!isChangeOrder) {\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    // Use clipPath in large mode.\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._enableRealtimeSort = function (realtimeSortCfg, data, api) {\n    var _this = this; // If no data in the first frame, wait for data to initSort\n\n\n    if (!data.count()) {\n      return;\n    }\n\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    if (this._isFirstFrame) {\n      this._dispatchInitSort(data, realtimeSortCfg, api);\n\n      this._isFirstFrame = false;\n    } else {\n      var orderMapping_1 = function (idx) {\n        var el = data.getItemGraphicEl(idx);\n\n        if (el) {\n          var shape = el.shape; // If data is NaN, shape.xxx may be NaN, so use || 0 here in case\n\n          return (baseAxis.isHorizontal() // The result should be consistent with the initial sort by data value.\n          // Do not support the case that both positive and negative exist.\n          ? Math.abs(shape.height) : Math.abs(shape.width)) || 0;\n        } else {\n          return 0;\n        }\n      };\n\n      this._onRendered = function () {\n        _this._updateSortWithinSameData(data, orderMapping_1, baseAxis, api);\n      };\n\n      api.getZr().on('rendered', this._onRendered);\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, baseAxis, orderMapping) {\n    var info = [];\n    data.each(data.mapDimension(baseAxis.dim), function (ordinalNumber, dataIdx) {\n      var mappedValue = orderMapping(dataIdx);\n      mappedValue = mappedValue == null ? NaN : mappedValue;\n      info.push({\n        dataIndex: dataIdx,\n        mappedValue: mappedValue,\n        ordinalNumber: ordinalNumber\n      });\n    });\n    info.sort(function (a, b) {\n      // If NaN, it will be treated as min val.\n      return b.mappedValue - a.mappedValue;\n    });\n    return {\n      ordinalNumbers: map(info, function (item) {\n        return item.ordinalNumber;\n      })\n    };\n  };\n\n  BarView.prototype._isOrderChangedWithinSameData = function (data, orderMapping, baseAxis) {\n    var scale = baseAxis.scale;\n    var ordinalDataDim = data.mapDimension(baseAxis.dim);\n    var lastValue = Number.MAX_VALUE;\n\n    for (var tickNum = 0, len = scale.getOrdinalMeta().categories.length; tickNum < len; ++tickNum) {\n      var rawIdx = data.rawIndexOf(ordinalDataDim, scale.getRawOrdinalNumber(tickNum));\n      var value = rawIdx < 0 // If some tick have no bar, the tick will be treated as min.\n      ? Number.MIN_VALUE // PENDING: if dataZoom on baseAxis exits, is it a performance issue?\n      : orderMapping(data.indexOfRawIndex(rawIdx));\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n  /*\n   * Consider the case when A and B changed order, whose representing\n   * bars are both out of sight, we don't wish to trigger reorder action\n   * as long as the order in the view doesn't change.\n   */\n\n\n  BarView.prototype._isOrderDifferentInView = function (orderInfo, baseAxis) {\n    var scale = baseAxis.scale;\n    var extent = scale.getExtent();\n    var tickNum = Math.max(0, extent[0]);\n    var tickMax = Math.min(extent[1], scale.getOrdinalMeta().categories.length - 1);\n\n    for (; tickNum <= tickMax; ++tickNum) {\n      if (orderInfo.ordinalNumbers[tickNum] !== scale.getRawOrdinalNumber(tickNum)) {\n        return true;\n      }\n    }\n  };\n\n  BarView.prototype._updateSortWithinSameData = function (data, orderMapping, baseAxis, api) {\n    if (!this._isOrderChangedWithinSameData(data, orderMapping, baseAxis)) {\n      return;\n    }\n\n    var sortInfo = this._dataSort(data, baseAxis, orderMapping);\n\n    if (this._isOrderDifferentInView(sortInfo, baseAxis)) {\n      this._removeOnRenderedListener(api);\n\n      api.dispatchAction({\n        type: 'changeAxisOrder',\n        componentType: baseAxis.dim + 'Axis',\n        axisId: baseAxis.index,\n        sortInfo: sortInfo\n      });\n    }\n  };\n\n  BarView.prototype._dispatchInitSort = function (data, realtimeSortCfg, api) {\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    var sortResult = this._dataSort(data, baseAxis, function (dataIdx) {\n      return data.get(data.mapDimension(realtimeSortCfg.otherAxis.dim), dataIdx);\n    });\n\n    api.dispatchAction({\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: sortResult,\n      animation: {\n        // Update the axis label from the natural initial layout to\n        // sorted layout should has no animation.\n        duration: 0\n      }\n    });\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype._removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(ChartView);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var coordSysX2 = coordSysBoundingRect.x + coordSysBoundingRect.width;\n    var coordSysY2 = coordSysBoundingRect.y + coordSysBoundingRect.height;\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysX2);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysY2);\n    var xClipped = x2 < x;\n    var yClipped = y2 < y; // When xClipped or yClipped, the element will be marked as `ignore`.\n    // But we should also place the element at the edge of the coord sys bounding rect.\n    // Beause if data changed and the bar show again, its transition animaiton\n    // will begin at this place.\n\n    layout.x = xClipped && x > coordSysX2 ? x2 : x;\n    layout.y = yClipped && y > coordSysY2 ? y2 : y;\n    layout.width = xClipped ? 0 : x2 - x;\n    layout.height = yClipped ? 0 : y2 - y; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return xClipped || yClipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new Rect({\n      shape: extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\n    var sector = new ShapeClass({\n      shape: defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item'; // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? updateProps : initProps)(sector, {\n        shape: animateTarget // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue\n\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction shouldRealtimeSort(seriesModel, coordSys) {\n  var realtimeSortOption = seriesModel.get('realtimeSort', true);\n  var baseAxis = coordSys.getBaseAxis();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (realtimeSortOption) {\n      if (baseAxis.type !== 'category') {\n        warn('`realtimeSort` will not work because this bar series is not based on a category axis.');\n      }\n\n      if (coordSys.type !== 'cartesian2d') {\n        warn('`realtimeSort` will not work because this bar series is not on cartesian2d.');\n      }\n    }\n  }\n\n  if (realtimeSortOption && baseAxis.type === 'category' && coordSys.type === 'cartesian2d') {\n    return {\n      baseAxis: baseAxis,\n      otherAxis: coordSys.getOtherAxis(baseAxis)\n    };\n  }\n}\n\nfunction updateRealtimeAnimation(realtimeSortCfg, seriesAnimationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  var seriesTarget;\n  var axisTarget;\n\n  if (isHorizontal) {\n    axisTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n    seriesTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n  } else {\n    axisTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n    seriesTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n  }\n\n  if (!isChangeOrder) {\n    // Keep the original growth animation if only axis order changed.\n    // Not start a new animation.\n    (isUpdate ? updateProps : initProps)(el, {\n      shape: seriesTarget\n    }, seriesAnimationModel, newIndex, null);\n  }\n\n  var axisAnimationModel = seriesAnimationModel ? realtimeSortCfg.baseAxis.model : null;\n  (isUpdate ? updateProps : initProps)(el, {\n    shape: axisTarget\n  }, axisAnimationModel, newIndex);\n}\n\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontal, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(BAR_BORDER_RADIUS_QUERY) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n\n  if (!isPolar) {\n    var labelPositionOutside = isHorizontal ? layout.height > 0 ? 'bottom' : 'top' : layout.width > 0 ? 'left' : 'right';\n    var labelStatesModels = getLabelStatesModels(itemModel);\n    setLabelStyle(el, labelStatesModels, {\n      labelFetcher: seriesModel,\n      labelDataIndex: dataIndex,\n      defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n      inheritColor: style.fill,\n      defaultOpacity: style.opacity,\n      defaultOutsidePosition: labelPositionOutside\n    });\n    var label = el.getTextContent();\n    setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n      return getDefaultInterpolatedLabel(data, value);\n    });\n  }\n\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  enableHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n  setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  var lineWidth = itemModel.get(BAR_BORDER_WIDTH_QUERY) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape =\n/** @class */\nfunction () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath =\n/** @class */\nfunction (_super) {\n  __extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  ;\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  };\n\n  return LargePath;\n}(Path);\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.__startPoint = backgroundStartPoint;\n    bgEl.__baseDimIdx = baseDimIdx;\n    bgEl.__largeDataIndices = largeDataIndices;\n    bgEl.__barWidth = barWidth;\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental\n  });\n  el.__startPoint = startPoint;\n  el.__baseDimIdx = baseDimIdx;\n  el.__largeDataIndices = largeDataIndices;\n  el.__barWidth = barWidth;\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var globalStyle = data.getVisual('style');\n  el.useStyle(extend({}, globalStyle)); // Use stroke instead of fill.\n\n  el.style.fill = null;\n  el.style.stroke = globalStyle.fill;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle();\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nexport default BarView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { layout, largeLayout } from '../../layout/barGrid';\nimport dataSample from '../../processor/dataSample';\nimport BarSeries from './BarSeries';\nimport BarView from './BarView';\nexport function install(registers) {\n  registers.registerChartView(BarView);\n  registers.registerSeriesModel(BarSeries);\n  registers.registerLayout(registers.PRIORITY.VISUAL.LAYOUT, zrUtil.curry(layout, 'bar')); // Use higher prority to avoid to be blocked by other overall layout, which do not\n  // only exist in this module, but probably also exist in other modules, like `barPolar`.\n\n  registers.registerLayout(registers.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, largeLayout);\n  registers.registerVisual({\n    seriesType: 'bar',\n    reset: function (seriesModel) {\n      // Visual coding for legend\n      seriesModel.getData().setVisual('legendSymbol', 'roundRect');\n    }\n  }); // Down sample after filter\n\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, dataSample('bar'));\n  /**\n   * @payload\n   * @property {string} [componentType=series]\n   * @property {number} [dx]\n   * @property {number} [dy]\n   * @property {number} [zoom]\n   * @property {number} [originX]\n   * @property {number} [originY]\n   */\n\n  registers.registerAction({\n    type: 'changeAxisOrder',\n    event: 'changeAxisOrder',\n    update: 'update'\n  }, function (payload, ecModel) {\n    var componentType = payload.componentType || 'series';\n    ecModel.eachComponent({\n      mainType: componentType,\n      query: payload\n    }, function (componentModel) {\n      if (payload.sortInfo) {\n        componentModel.axis.setCategorySortInfo(payload.sortInfo);\n      }\n    });\n  });\n}","<template>\r\n    <div class=\"chart\">\r\n        <div ref=\"chart\" class=\"echarts\" style=\"width:800px;height:500px\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import * as echarts from \"echarts/core\";\r\n    import { TitleComponent, ToolboxComponent, TooltipComponent, GridComponent, LegendComponent, MarkLineComponent, MarkPointComponent } from \"echarts/components\";\r\n    import { BarChart } from \"echarts/charts\";\r\n    import { SVGRenderer } from \"echarts/renderers\";\r\n    export default {\r\n        props: [\"Dataset\", \"Season\"],\r\n        async mounted() {\r\n            echarts.use([TitleComponent, ToolboxComponent, TooltipComponent, GridComponent, LegendComponent, BarChart, SVGRenderer, MarkLineComponent, MarkPointComponent]);\r\n\r\n            this.myChart = echarts.init(this.$refs.chart);\r\n            let data = await fetch(\"./summer中国奖牌.json\").then((res) => res.json());\r\n\r\n            data = Object.values(data);\r\n            this.option.xAxis.data = [...new Set(data.map((i) => i.Year))];\r\n            this.option.series = [\"Gold\", \"Silver\", \"Bronze\"].map((Medal) => {\r\n                return {\r\n                    name: Medal,\r\n                    type: \"bar\",\r\n                    data: data\r\n                        .filter((i) => i.Medal == Medal)\r\n                        .sort((a, b) => a.Year - b.Year)\r\n                        .map((i) => i.count),\r\n                };\r\n            });\r\n            console.log(this.option);\r\n            this.myChart.setOption(this.option);\r\n            console.log(this.myChart);\r\n        },\r\n        data() {\r\n            return {\r\n                myChart: {},\r\n                option: {\r\n                    color: [\"Gold\", \"Silver\", \"#b87333\"],\r\n                    title: {\r\n                        text: \"折线图堆叠\",\r\n                    },\r\n                    tooltip: {\r\n                        trigger: \"axis\",\r\n                    },\r\n                    legend: {},\r\n                    grid: {\r\n                        left: \"3%\",\r\n                        right: \"4%\",\r\n                        bottom: \"3%\",\r\n                        containLabel: true,\r\n                    },\r\n                    xAxis: {\r\n                        type: \"category\",\r\n                    },\r\n                    yAxis: {\r\n                        type: \"value\",\r\n                    },\r\n                    series: [],\r\n                },\r\n            };\r\n        },\r\n    };\r\n</script>\r\n<style lang=\"less\" scoped></style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./中国奖牌柱状图.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./中国奖牌柱状图.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./中国奖牌柱状图.vue?vue&type=template&id=70a18f8e&scoped=true&\"\nimport script from \"./中国奖牌柱状图.vue?vue&type=script&lang=js&\"\nexport * from \"./中国奖牌柱状图.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"70a18f8e\",\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}